{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/core/misc/EventEmitter.js","webpack:///./src/core/misc/Clock.js","webpack:///./src/utils/constants.js","webpack:///./src/utils/animation.js","webpack:///./src/utils/base.js","webpack:///./src/utils/browser.js","webpack:///./src/utils/text.js","webpack:///./src/utils/dom.js","webpack:///./src/utils/themes.js","webpack:///./src/utils/algorithms.js","webpack:///./src/utils/canvas.js","webpack:///./src/core/animation/Tween.js","webpack:///./src/core/chart2/ChartTypes.js","webpack:///./src/core/series/Series.js","webpack:///./src/core/series/BarSeries.js","webpack:///./src/core/series/PercentageAreaSeries.js","webpack:///./src/core/series/SeriesTypes.js","webpack:///./src/core/chart2/events/ChartEvents.js","webpack:///./src/core/chart2/axis/ChartAxis.js","webpack:///./src/core/chart2/axis/ChartAxisY.js","webpack:///./src/core/chart2/axis/ChartAxisY2.js","webpack:///./src/core/chart2/axis/ChartAxisX.js","webpack:///./src/core/chart2/BaseChart.js","webpack:///./src/core/animation/TransitionPlayback.js","webpack:///./src/core/worker/worker-events.js","webpack:///./src/core/chart2/Chart.js","webpack:///./src/core/chart2/events/NavigatorChartEvents.js","webpack:///./src/core/chart2/NavigatorChart.js","webpack:///./src/Telechart2.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EventEmitter","this","_eventListeners","_proto","emit","eventName","_len","arguments","length","args","Array","_key","_fireEvent","apply","concat","on","cb","context","addEventListener","once","addEventListenerOnce","_subscribeEvent","_this","listener","_len2","_key2","removeEventListener","listenerIndex","findIndex","_ref","splice","removeAllListeners","_allocateEvent","push","eventListeners","_len3","_key3","_eventListeners$i","Clock","_lastUpdateMs","performance","now","getDelta","delta","months","TimeRanges","second","minute","hour","day","week","month","year","ChartVariables","enableOffscreenCanvas","minWidth","mainMaxHeight","mainChartHeight","mainChartOffsetTop","mainChartOffsetBottom","chartPaddingLeftRight","navigationChartHeight","navigationChartUIHeight","navigationChartOffsetY","initialViewportScale","DprSampling","main","axis","ui","navSeries","navUI","FRAMES_PER_SECOND","FRAMES_DELTA_SEC","FRAMES_DELTA_MS","warp","deltaTime","framesDeltaSec","warpRatio","animationTimeout","timeoutMs","Promise","resolve","fulfillmentCallback","requestAnimationFrame","setTimeout","_","linear","easeInOutQuad","easeInOutCubic","objectEachKey","fn","keys","forEach","clampNumber","min","max","Infinity","ensureNumber","Number","isNaN","isDate","Date","valueOf","throttle","delayMs","savedArgs","savedThis","isThrottled","wrapper","debounce","time","timeout","_arguments","clearTimeout","isBrowserSafari","test","navigator","userAgent","isTouchEventsSupported","document","documentElement","isPassiveEventSupported","passiveSupported","options","passive","window","err","passiveIfSupported","isWebWorkerSupported","Worker","isOffscreenCanvasSupported","OffscreenCanvas","isTransformSupported","div","createElement","undefined","style","getDevicePixelRatio","sampling","dpr","devicePixelRatio","cssText","styleObject","reduce","css","prop","camelToKebabCase","text","String","toLowerCase","substr","replace","parseQueryString","href","queryString","split","slice","map","part","keyValue","result","obj","assign","zeroFill","number","tagName","children","element","createElementNS","attrs","useNS","setAttributesNS","attrsNS","setAttributes","isArray","node","innerHTML","textContent","appendChild","resolveElement","elementOrSelector","querySelector","getElementOffset","top","left","rect","getBoundingClientRect","win","ownerDocument","defaultView","pageYOffset","pageXOffset","e","getElementHeight","innerHeight","clientHeight","getElementWidth","innerWidth","clientWidth","format","x","re","num","toFixed","Math","RegExp","camelCaseAttrWhiteList","attr","includes","setAttribute","setAttributeNS","hasClass","className","addClass","classNames","trim","removeClass","existingClasses","classesToDelete","Set","has","ROOT_CLASS_NAME","interpolateThemeClass","themeName","ChartThemes","default","dark","ChartThemesColors","Colors","color","sliderBorder","sliderOverlay","sliderOverlayAlpha","axisTextColor","axisTextColorAlpha","axisColor","axisColorAlpha","barAxisTextColorX","barAxisTextColorAlphaX","barAxisTextColorY","barAxisTextColorAlphaY","barAllColor","maskColor","maskColorAlpha","arraysEqual","arrayA","arrayB","arrayMinIndex","array","startIndex","endIndex","minIndex","arrayMin","arrayMaxIndex","maxIndex","arrayMax","arrayMinMaxIndexes","arrayMinMax","_arrayMinMaxIndexes","binarySearchIndexes","order","right","mid","arrayDiff","dict","drawRoundedRect","y","width","height","_options","_options$tl","tl","_options$tr","tr","_options$bl","bl","_options$br","br","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","TWEEN_ID","TweenState","NOT_STARTED","RUNNING","PAUSED","COMPLETED","CANCELLED","TweenEvents","DEFAULT_PARAMS","timeScale","duration","timingFunction","Tween","_EventEmitter","target","properties","targetValues","params","_id","_params","_state","_timeScale","_timeElapsed","_duration","_timingFunctionName","_timingFunction","_target","_properties","_targetValues","_startValues","_initParams","_construct","update","isRunning","_updateAnimation","_checkDuration","start","isNotStarted","_getPropertyValues","pause","finish","_dispose","cancel","patchAnimation","setTimeScale","_this$_params","_getTimingFunction","progress","timingProgress","values","_getPropertyValue","functionName","defaultFunctionName","timingFunctions","ChartTypes","chart","navigatorChart","SERIES_AUTOINCREMENT","OpacityAnimationType","Series","settings","index","isMainChart","seriesOptions","xAxis","yAxis","_name","_label","_color","strokeWidth","_visible","_pathUpdateNeeded","localMaxY","localMinY","_globalMaxY","_globalMinY","opacity","seriesIndex","opacityAnimation","opacityAnimationType","chartType","_parseSettings","initialize","setType","SeriesTypes","line","pathUpdated","redrawChartNeeded","render","input","telechart","mainContext","interval","_viewportPointsIndexes","drawByInterval","viewportPointsStep","step","globalAlpha","strokeStyle","lineWidth","lineJoin","lineCap","isYScaled","drawPathToContext","viewportPixelY","viewportPixelY2","currentLocalMinY","currentLocalMinY2","stroke","_ref$viewportRange","viewportRange","_ref$viewportPixelX","viewportPixelX","_ref$viewportPixelY","_ref$currentLocalMinY","minViewportX","chartHeight","chartBottomLineY","seriesOffsetTop","dxOffset","dyOffset","setVisible","_createShowAnimation","setInvisible","_createHideAnimation","toggleVisible","updateLocalExtremes","_this$chart$_viewport","_viewportRangeIndexes","rangeStartIndex","rangeEndIndex","_arrayMinMax","minValue","maxValue","updateGlobalExtremes","_arrayMinMax2","requestPathUpdate","type","_this$settings","label","_this$settings$option","_options$strokeWidth","_createOpacityAnimation","_this2","isPercentage","onFinished","BarSeries","_Series","bar","drawBarsToContext","barScale","barWidthX","barHalfWidthX","fillStyle","inputIndex","startY","barHeightY","fillRect","fill","PercentageAreaSeries","area","drawAreasToContext","chartOffsetTop","scale","stackedSumTree","sumTreeOffset","computeSumTreeChunkOffset","useAdditionalSums","areaAdditionalSumsNeeded","additionalSums","areaAdditionalSums","sum","heightY","SeriesTypeMapping","_SeriesTypeMapping","ChartEvents","AxisElementState","ChartAxis","axesValues","elements","animations","updateAnimationsNeeded","redrawNeeded","fontSize","updateValues","initializeWrappers","hasActiveAnimations","animationTick","updateAnimations","updateAnimationsWithoutAnimations","forceRedraw","redraw","requestUpdateAnimations","withoutAnimations","requestRedraw","hasAnimations","animation","oldValues","valuesToDelete","valuesToCreate","filter","indexOf","createNewElements","deleteOldElements","animateElements","_getElementByValue","state","created","startOpacity","animationObject","initializeWrapper","createShowingAnimation","detachElement","createHidingAnimation","animationId","id","detachAnimation","opacityScale","_this3","indexToDelete","_getElementIndexById","_getAnimationIndexById","computeAxisValues","onChartResize","eachElement","_getElementIndexByValue","AUTOINCREMENT_ID","ChartAxisY","_ChartAxis","isDoubleAxis","axisContext","clearRect","chartWidth","firstLine","series","drawAxes","isVisible","drawLeft","textColor","textColorLeft","textColorAlpha","textColorLeftAlpha","axesColor","axesColorAlpha","font","textAlign","viewportPadding","axisWidth","bottomBorder","seriesOffsetBottom","_computeValuePosition","hasAnimation","isShowing","fillText","formattedValue","computeViewportPixelY","viewportMinY","distance","valuesNumber","deltaY","currentValue","unshift","formatNumber","projectYToCanvas","roundValue","v","abs","symbol","isBarChart","themeColors","ChartAxisY2","_ChartAxisY","drawRight","textColorRight","textColorRightAlpha","computeViewportPixelY2","localMinY2","localMaxY2","viewportMinY2","projectYToCanvas2","ChartAxisX","dateCache","axesValuesMapping","labelWidth","draw","leftBorder","rightBorder","pixelX","viewportMinX","viewportMaxX","maxAvailableLabels","intervalInPixels","minLabelWidth","foundByPrev","currentLastValue","prevValue","nextValue","_toDateString","parts","join","dates","projectXToCanvas","withHours","cacheKey","floor","toString","date","datePart","toUTCString","base","getFullYear","getHours","getMinutes","CHART_ID","BaseChart","_type","_groupingPixels","_viewportRange","_viewportDistance","_viewportPadding","_viewportLeftPaddingScale","_viewportRightPaddingScale","_viewportRangeUpdateNeeded","_viewportPointsGroupingNeeded","currentLocalMaxY","currentLocalMaxY2","minMaxYAnimation","minMaxYAnimationSign","minMaxYAnimation2","minMaxYAnimationSign2","_rangeAnimation","_rangeAnimationObject","cursorInsideChart","axisCursorPositionX","axisCursorPointIndex","yAxisView","yAxisView2","xAxisView","isLineChart","isStacked","createSeries","initializeStackedSumTree","addEvents","setInitialRange","approximateViewportPoints","initializeAxisY","initializeAxisX","redrawChart","redrawAxis","addAreaSums","extremesUpdated","hasRangeAnimation","updateViewportRange","from","to","skipExtremes","updateViewportPixel","eachSeries","hasOpacityAnimation","isHiding","rebuildAdditionalAreaSums","renderYAxis","data","_ref$seriesOptions","groupingOptions","grouping","pixels","columns","types","colors","names","_data$y_scaled","y_scaled","_data$percentage","percentage","_data$stacked","stacked","xAxisIndex","column","yAxes","shift","extendSeriesOptions","maxN","pow","lines","chunkSize","sumTree","k","currentN","columnIndex","columnSum","bit","_this$_viewportPoints","stepIndex","addSum","lineIndex","setViewportRange","animateViewportRangeTo","minX","maxX","_options$duration","_options$timingFuncti","_options$preservePadd","preservePadding","_this$_clampViewportR","_clampViewportRange","newMinX","newMaxX","_temp","_this4","_ref2","_ref2$skipExtremes","_ref2$preservePadding","oldDistance","_setViewportRange","distanceChanged","oldRangeIndexes","_updateViewportIndexes","localExtremesUpdateRequested","updateExtremes","updateLocalExtremes2","_cursorShowing","_setInsideChartState","_options2","_options2$skipExtreme","_options2$preservePad","_this$_viewportRangeI","isNavigatorChart","groupingDistanceLimitX","groupStartIndex","log2","chunkOffset","_this$_viewportRangeI2","oldLocalMinY","oldLocalMaxY","updateAnimation","_updateOrCreateMinMaxYAnimation","oldLocalMinY2","oldLocalMaxY2","_updateOrCreateMinMaxYAnimation2","computeViewportPixelX","minY","maxY","computeViewportPadding","localMinX","localMaxX","_this5","onResize","onSeriesVisibleChange","getSeriesByLabel","findSeries","setSeriesVisible","setSeriesInvisible","toggleSeries","toggleAllSeriesExcept","targetLine","isSingleVisible","predicate","setChartType","toRelativeX","projectCursorToX","_ref3","_ref3$pageX","pageX","chartLeft","pageY","canvasOffset","computeSumTreeN","bits","_this$_viewportRange","rangeStart","rangeEnd","_binarySearchIndexes","minUpperIndex","_binarySearchIndexes2","maxLowerIndex","_this$_clampViewportR2","globalMinX","globalMaxX","getTime","_ref4","actualPaddingX","receivedLeftPaddingX","receivedRightPaddingX","currentLocalExtremeDifference","localExtremeDifference","_createMinMaxYAnimation","_patchMinMaxYAnimation","currentLocalExtremeDifference2","localExtremeDifference2","_createMinMaxYAnimation2","_patchMinMaxYAnimation2","_this6","_updateMinMaxAnimationSign","_this7","_updateMinMaxAnimationSign2","canvasWidth","TRANSITION_ID","TransitionEvents","TransitionState","FINISHED","TransitionPlayback","_velocity","_acceleration","_fromPosition","_toPosition","_currentPosition","_startPosition","_initOptions","_updateVelocity","_updateCurrentPosition","reset","setToPosition","setAcceleration","a","setVelocity","velocity","_options$timeScale","_options$velocity","_options$maxVelocity","maxVelocity","_options$acceleration","acceleration","_maxVelocity","dispose","sign","_computeDeltaDistance","distanceToDestination","deltaDistance","TelechartWorkerEvents","CursorAnimationType","inactive","showing","hiding","Chart","_BaseChart","_firstCursorAnimation","redrawCursorRequested","cursorAnimation","cursorOpacityAnimation","cursorOpacity","cursorAnimationType","addCursorEvents","redrawCursors","hasCursorOpacityAnimation","hasCursorAnimation","requestRedrawCursor","redrawUIOverlay","lastOutput","len","redrawCursor","redrawMarkers","uiContext","drawCursorBar","drawCursorLine","cursorColor","cursorColorAlpha","y1","y2","x2","x3","x4","fillColor","currentX","currentPosition","lowerIndex","upperIndex","lowerX","upperX","linearInterpolation","canvasX","y0","canvasY","arc","PI","setNavigationRange","_this$_resolveNavigat","_resolveNavigationRange","animateNavigationRangeTo","_this$_resolveNavigat2","initialViewport","showCursor","hideCursor","newX","oldX","translateMarkers","cancelCursorOpacityAnimation","createCursorOpacityAnimation","patchCursorAnimation","viewportRangeIndexes","insideViewportRange","createCursorAnimation","toOpacity","toX","fromX","viewportDistance","emitEvent","event","_onMouseMove","_onMouseLeave","_onTouchStart","_onTouchMove","_onTouchEnd","globalDistance","padding","ev","_onCursorMove","_onCursorLeave","targetTouch","targetTouches","cursorPosition","insideChart","_insideChart","oldIndex","cursorX","_findPointIndexByCursor","indexChanged","_updateLabel","changed","_prepareLabelData","isWorker","global","postMessage","dedicatedApi","updateDataLabel","isLowerCloser","isLowerVisible","isUpperVisible","isInside","immediate","_markerHideTimeout","change","_onCursorInsideChartChanged","_showCursor","_hideCursor","_toggleDataLabelVisibility","visibility","setDataLabelVisibility","_this$telechart$canva","chartTop","addAll","item","visible","cursorIndex","NavigatorChartEvents","NavigatorChart","_overlayPaddingTopBottom","_paddingLeftRight","_sliderWidth","_sliderLeftRightBorderWidth","_overlayLeftWidth","_overlayRightWidth","redrawSliderUINeeded","_navigatorRange","_navigatorRangeAnimation","_navigationRangeAnimationObject","_navigatorMinRangeDistance","_navigatorChangeDirection","_updateNavigatorDimensions","sendRangeToApi","updateNavigationRange","redrawSliderUI","navigationSeriesContext","navigationUIContext","navigatorHeight","redrawSliderOverlays","redrawSlider","overlayLeftWidth","overlayRightWidth","navigatorWidth","pinHeight","x1","range","_this$telechart$_char","_chart","f","rangeX","_this$_clampNavigatio","_clampNavigationRange","newMin","newMax","setNavigationRangeFromEvent","_ref$emitChange","emitChange","_this$_clampNavigatio2","_onSliderOverlayClick","_onSliderMouseDown","_onSliderMouseMove","_onSliderTouchStart","_onSliderTouchMove","_onSliderControllerMouseDown","_onSliderControllerMouseMove","_onSliderControllerTouchStart","_onSliderControllerTouchMove","overlayLeftScale","overlayRightScale","preserveDistance","preservedDistance","isRightController","minDistance","_sliderStartEvent","_sliderStartPosition","startPageX","_ev$pageX","positionDelta","startPosition","_this$_clampNavigatio3","_ev$targetTouches$","_targetTouch$pageX","_this$_clampNavigatio4","direction","_sliderControllerStartPosition","_sliderControllerStartEvent","_ev$pageX2","isLeft","_this$_clampNavigatio5","_ev$targetTouches$2","_targetTouch$pageX2","_this$_clampNavigatio6","position","halfDistance","_this$_clampNavigatio7","TELECHART_ID","Telechart2","environmentOptions","mainCanvas","axisCanvas","uiCanvas","navigationSeriesCanvas","navigationUICanvas","_navigatorChart","_themeName","_title","_clock","axisCanvasOffset","navigationSeriesCanvasOffset","navigationUICanvasOffset","api","setOptions","setMainCanvas","setAxisCanvas","setUICanvas","setNavigationSeriesCanvas","setNavigationUICanvas","setEnvironmentOptions","canvasHeight","canvasDpr","axisCanvasWidth","axisCanvasHeight","axisCanvasDpr","uiCanvasOffset","uiCanvasWidth","uiCanvasHeight","uiCanvasDpr","navigationSeriesCanvasWidth","navigationSeriesCanvasHeight","navigationSeriesCanvasDpr","navigationUICanvasWidth","navigationUICanvasHeight","navigationUICanvasDpr","updateContexts","canvas","setTheme","theme","setTitle","title","initializeContexts","_createChart","_createNavigatorChart","_addEventListeners","initializeButtons","nextFrame","destroy","getContext","updateContextsScale","buttons","_getLines","updateButtons","mainCanvasEvent","navUICanvasEvent","_this$_navigatorChart","_chartSumTree","_this3$_chart","_this3$_chart2","self","__webpack_exports__","Telechart2_Telechart2"],"mappings":"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","file":"telechart.d32fb6517ad032e96527.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Simple event emitter for better performance and app size\n *\n * @author Alexander Belov\n */\nexport class EventEmitter {\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _eventListeners = {};\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   */\n  emit (eventName, ...args) {\n    this._fireEvent( eventName, ...args );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  on (eventName, cb, context = null) {\n    this.addEventListener( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  once (eventName, cb, context = null) {\n    this.addEventListenerOnce( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListener (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    this._subscribeEvent( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListenerOnce (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    const listener = (...args) => {\n      cb.apply( context, args );\n      this.removeEventListener( eventName, listener );\n    };\n\n    this.addEventListener( eventName, listener );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} listener\n   */\n  removeEventListener (eventName, listener) {\n    if (!this._eventListeners[ eventName ]) {\n      return;\n    }\n\n    const listenerIndex = this._eventListeners[ eventName ].findIndex(([ cb ]) => {\n      return listener === cb;\n    });\n\n    if (listenerIndex < 0) {\n      return;\n    }\n\n    this._eventListeners[ eventName ].splice( listenerIndex, 1 );\n  }\n\n  /**\n   * @param {string | *} eventName\n   */\n  removeAllListeners (eventName = null) {\n    if (!eventName) {\n      this._eventListeners = {};\n    } else if (this._eventListeners[ eventName ]) {\n      this._eventListeners[ eventName ] = null;\n      delete this._eventListeners[ eventName ];\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @private\n   */\n  _allocateEvent (eventName) {\n    this._eventListeners[ eventName ] = this._eventListeners[ eventName ] || []\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  _subscribeEvent (eventName, cb, context) {\n    this._allocateEvent( eventName );\n    this._eventListeners[ eventName ].push([ cb, context ]);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   * @private\n   */\n  _fireEvent (eventName, ...args) {\n    const eventListeners = this._eventListeners[ eventName ] || [];\n\n    for (let i = 0; i < eventListeners.length; ++i) {\n      const [ cb, context ] = eventListeners[ i ];\n      cb.apply( context, args );\n    }\n  }\n}\n","export class Clock {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateMs = 0;\n\n  constructor () {\n    this._lastUpdateMs = performance.now();\n  }\n\n  /**\n   * @return {number}\n   */\n  getDelta () {\n    const now = performance.now();\n    const delta = now - this._lastUpdateMs;\n    this._lastUpdateMs = now;\n\n    return delta;\n  }\n}\n","export const months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst hour = 3600 * 1000;\n\n/**\n * @type {{second: number, minute: number, hour: number, day: number, week: number, month: number, year: number}}\n */\nexport const TimeRanges = {\n  second: 1000,\n  minute: hour / 60,\n  hour,\n  day: hour * 24,\n  week: hour * 24 * 7,\n  month: hour * 24 * 30, // rude\n  year: hour * 24 * 365\n};\n\nconst chartPaddingTop = 15;\nconst chartPaddingBottom = 32;\n\nexport const ChartVariables = {\n  enableOffscreenCanvas: false,\n\n  minWidth: 100,\n\n  mainMaxHeight: 290 + chartPaddingTop + chartPaddingBottom,\n  mainChartHeight: 290,\n  mainChartOffsetTop: chartPaddingTop,\n  mainChartOffsetBottom: chartPaddingBottom,\n\n  chartPaddingLeftRight: 12,\n\n  // navigation chart\n  navigationChartHeight: 40,\n  navigationChartUIHeight: 44,\n  navigationChartOffsetY: 388,\n\n  initialViewportScale: .25\n};\n\nexport const DprSampling = {\n  main: 2,\n  axis: 1.8,\n  ui: 1.25,\n  navSeries: 2.3,\n  navUI: 1\n};\n","export const FRAMES_PER_SECOND = 60;\nexport const FRAMES_DELTA_SEC = 1 / 60;\nexport const FRAMES_DELTA_MS = 1000 / 60;\n\n/**\n * @param {number} value\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warp (value, deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return value * warpRatio( deltaTime, framesDeltaSec );\n}\n\n/**\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warpRatio (deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return deltaTime / framesDeltaSec;\n}\n\n/**\n * @param {number} timeoutMs\n * @param {*} args\n * @return {Promise<void>}\n */\nexport function animationTimeout (timeoutMs = 0, ...args) {\n  return new Promise(resolve => {\n    const fulfillmentCallback = resolve.bind( null, ...args );\n    const cb = () => requestAnimationFrame( fulfillmentCallback );\n\n    if (!timeoutMs) {\n      cb();\n    } else {\n      setTimeout( _ => cb(), timeoutMs );\n    }\n  });\n}\n\nexport const linear = t => t;\nexport const easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\nexport const easeInOutCubic = t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n","/**\n * @param {*} object\n * @param {Function} fn\n */\nexport function objectEachKey (object, fn = () => {}) {\n  Object.keys( object ).forEach( fn );\n}\n\n/**\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nexport function clampNumber (value, min = -Infinity, max = Infinity) {\n  if (min > max) {\n    [ min, max ] = [ max, min ];\n  }\n\n  if (value > max) {\n    value = max;\n  }\n\n  if (value < min) {\n    value = min;\n  }\n\n  return value;\n}\n\n/**\n * @param {*} value\n * @return {number}\n */\nexport function ensureNumber (value) {\n  value = Number(value);\n  if (Number.isNaN(value)) {\n    return 0;\n  }\n  return value;\n}\n\n/**\n * @param {Date|*} value\n * @return {boolean}\n */\nexport function isDate (value) {\n  return value instanceof Date && !isNaN( value.valueOf() );\n}\n\n/**\n * @param {Function} fn\n * @param {number} delayMs\n * @return {wrapper}\n */\nexport function throttle (fn, delayMs) {\n  let isThrottled = false,\n    savedArgs,\n    savedThis;\n\n  function wrapper () {\n    if (isThrottled) {\n      savedArgs = arguments;\n      savedThis = this;\n      return;\n    }\n\n    fn.apply(this, arguments);\n\n    isThrottled = true;\n\n    setTimeout(_ => {\n      isThrottled = false;\n      if (savedArgs) {\n        wrapper.apply(savedThis, savedArgs);\n        savedArgs = savedThis = null;\n      }\n    }, delayMs);\n  }\n\n  return wrapper;\n}\n\n/**\n * @param {Function} fn\n * @param {number} time\n * @return {Function}\n */\nexport function debounce (fn, time) {\n  let timeout;\n\n  return function () {\n    const fnc = () => fn.apply( this, arguments );\n\n    clearTimeout(timeout);\n    timeout = setTimeout(fnc, time);\n  }\n}\n","/**\n * @returns {boolean}\n */\nexport function isBrowserSafari () {\n  return /^((?!chrome|android|crios|fxios).)*safari/i.test( navigator.userAgent );\n}\n\n/**\n * @return {boolean}\n */\nexport function isTouchEventsSupported () {\n  return 'ontouchstart' in document.documentElement;\n}\n\n/**\n * @return {boolean}\n */\nexport function isPassiveEventSupported () {\n  let passiveSupported = false;\n\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser\n        //   attempts to access the passive property.\n        passiveSupported = true;\n      }\n    };\n\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, options);\n  } catch(err) {\n    passiveSupported = false;\n  }\n\n  return passiveSupported;\n}\n\n/**\n * @return {*}\n */\nexport function passiveIfSupported (passive = true) {\n  return isPassiveEventSupported() ? { passive } : false;\n}\n\nexport const isWebWorkerSupported = () => typeof window.Worker !== 'undefined';\nexport const isOffscreenCanvasSupported = () => typeof window.OffscreenCanvas !== 'undefined';\n\n/**\n * @return {*}\n */\nexport function isTransformSupported () {\n  const prefix = 'transform';\n  const div = document.createElement('div');\n\n  return div && div.style[ prefix ] !== undefined;\n}\n\n/**\n * @return {number}\n */\nexport function getDevicePixelRatio (sampling = 1.25) {\n  const min = 1;\n  const dpr = window.devicePixelRatio || min;\n  return dpr > 1.25\n    ? min + ( dpr - min ) / sampling\n    : dpr;\n}\n","/**\n * Number.prototype.format(n, x, s, c)\n *\n * @param {number} n - length of decimal\n * @param {number} x - length of whole part\n * @param {string} s - sections delimiter\n * @param {string} c - decimal delimiter\n */\nNumber.prototype.format = function(n = 0, x = 3, s = ' ', c = '.') {\n  const re = '\\\\d(?=(\\\\d{' + (x || 3) + '})+' + (n > 0 ? '\\\\D' : '$') + ')';\n  const num = this.toFixed(Math.max(0, ~~n));\n\n  return (c ? num.replace('.', c) : num).replace(new RegExp(re, 'g'), '$&' + (s || ' '));\n};\n\n/**\n * @param {Object} styleObject\n * @returns {string}\n */\nexport function cssText (styleObject = {}) {\n  return Object.keys( styleObject ).reduce((css, prop) => {\n    return `${css ? css + ' ' : ''}${camelToKebabCase( prop )}: ${styleObject[ prop ]};`;\n  }, '');\n}\n\n/**\n * @param {string} text\n * @returns {string}\n */\nexport function camelToKebabCase (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return (\n    text[ 0 ].toLowerCase() + text.substr( 1 )\n  ).replace( /([A-Z])/g, '-$1' ).toLowerCase();\n}\n\n/**\n * @param {string} href\n * @return {*}\n */\nexport function parseQueryString (href) {\n  const queryString = href.split('?').slice(1);\n  if (!queryString.length) {\n    return {};\n  }\n\n  return queryString[ 0 ].split( '&' ).map(part => {\n    const keyValue = part.split( '=' );\n    return {\n      [keyValue[ 0 ]]: keyValue[ 1 ]\n    };\n  }).reduce((result, obj) => {\n    return Object.assign(result, obj);\n  })\n}\n\n/**\n * @param {number} number\n * @return {string}\n */\nexport function zeroFill (number) {\n  return number < 10 ? '0' + number : number;\n}\n","import { objectEachKey } from \"./base\";\nimport { camelToKebabCase } from './text';\n\n/**\n * @param {string} tagName\n * @param {Object} options\n * @param {Array|*} children\n * @param {string|*} ns\n * @return {Element}\n */\nexport function createElement (tagName, options = {}, children = [], ns = null) {\n  const element = !ns\n    ? document.createElement( tagName )\n    : document.createElementNS( ns, tagName );\n\n  if (options.attrs) {\n    !options.useNS\n      ? setAttributes( element, options.attrs )\n      : setAttributesNS( element, options.attrs, options.attrsNS || null );\n  }\n\n  if (children || Array.isArray( children )) {\n    children = [].concat( children );\n    children.forEach(node => {\n      if (typeof node === 'string') {\n        // optimistic way\n        if (/[<>]/i.test( node )) {\n          element.innerHTML += node;\n        } else {\n          element.textContent += node;\n        }\n      } else {\n        element.appendChild( node );\n      }\n    });\n  }\n\n  return element;\n}\n\n/**\n * @param {Element|string} elementOrSelector\n * @return {Element | null}\n */\nexport function resolveElement (elementOrSelector) {\n  if (typeof elementOrSelector !== 'string') {\n    return elementOrSelector;\n  }\n  return document.querySelector( elementOrSelector );\n}\n\n/**\n * @param {Element} element\n * @return {{top: number, left: number}}\n */\nexport function getElementOffset (element) {\n  if (!element) {\n    return { top: 0, left: 0 };\n  }\n\n  try {\n    // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n    const rect = element.getBoundingClientRect();\n    const win = element.ownerDocument.defaultView;\n    return {\n      top: rect.top + win.pageYOffset,\n      left: rect.left + win.pageXOffset\n    };\n  } catch (e) {\n    return { top: 0, left: 0 };\n  }\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementHeight (element) {\n  return element.innerHeight || element.clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementWidth (element) {\n  return element.innerWidth || element.clientWidth;\n}\n\nconst camelCaseAttrWhiteList = [\n];\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n */\nexport function setAttributes (element, attrs = {}) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttribute( attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n * @param {string | *} ns\n */\nexport function setAttributesNS (element, attrs = {}, ns = null) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttributeNS( ns, attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {string} attr\n * @param {*} value\n * @param {string | *} ns\n */\nexport function setAttributeNS (element, attr, value, ns) {\n  // it's a magic but it increases speed for 1-2ms on slow devices\n  // prevent from babel optimisation\n  ns = ns || null;\n  element.setAttributeNS( ns, attr, value );\n}\n\n/**\n * @param {Element} element\n * @param {string} className\n */\nexport function hasClass (element, className) {\n  return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test( element.className );\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function addClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  let className = element.className;\n\n  for (let i = 0; i < classNames.length; ++i) {\n    if (!hasClass( element, classNames[ i ] )) {\n      className += ` ${classNames[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function removeClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  let existingClasses = element.className.split( ' ' );\n  let classesToDelete = new Set( classNames );\n  let className = '';\n\n  for (let i = 0; i < existingClasses.length; ++i) {\n    if (!classesToDelete.has( existingClasses[ i ] )) {\n      className += ` ${existingClasses[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n","export const ROOT_CLASS_NAME = 'telechart2-root';\n\n/**\n * @param {string} themeName\n * @returns {string}\n */\nexport function interpolateThemeClass (themeName) {\n  return `${ROOT_CLASS_NAME}_theme_${themeName}`;\n}\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemes = {\n  default: 'default',\n  dark: 'dark'\n};\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemesColors = {\n  default: '#ffffff',\n  dark: '#242F3E'\n};\n\nexport const Colors = {\n  default: {\n    color: '#FFFFFF',\n\n    sliderBorder: '#C0D1E1',\n    sliderOverlay: '#E2EEF9',\n    sliderOverlayAlpha: .6,\n\n    // axis\n    axisTextColor: '#8E8E93',\n    axisTextColorAlpha: 1,\n    axisColor: '#182D3B',\n    axisColorAlpha: .1,\n\n    // axis for bars\n    barAxisTextColorX: '#252529',\n    barAxisTextColorAlphaX: .5,\n    barAxisTextColorY: '#252529',\n    barAxisTextColorAlphaY: .5,\n    barAllColor: '#000000',\n\n    // cursor mask\n    maskColor: '#FFFFFF',\n    maskColorAlpha: .5\n  },\n  dark: {\n    color: '#242F3E',\n\n    sliderBorder: '#56626D',\n    sliderOverlay: '#304259',\n    sliderOverlayAlpha: .6,\n\n    // axis\n    axisTextColor: '#A3B1C2',\n    axisTextColorAlpha: .6,\n    axisColor: '#FFFFFF',\n    axisColorAlpha: .1,\n\n    // axis for bars\n    barAxisTextColorX: '#A3B1C2',\n    barAxisTextColorAlphaX: .6,\n    barAxisTextColorY: '#ECF2F8',\n    barAxisTextColorAlphaY: .5,\n    barAllColor: '#FFFFFF',\n\n    // cursor mask\n    maskColor: '#242F3E',\n    maskColorAlpha: .5\n  }\n};\n","/**\n * @param {Array<*>} arrayA\n * @param {Array<*>} arrayB\n * @param {string | *} key\n * @return {boolean}\n */\nexport function arraysEqual (arrayA, arrayB, key = null) {\n  if (!Array.isArray(arrayA)\n    || !Array.isArray(arrayB)\n    || arrayA.length !== arrayB.length) {\n    return false;\n  }\n  for (let i = 0; i < arrayA.length; ++i) {\n    if (key) {\n      if (arrayA[ i ][ key ] !== arrayB[ i ][ key ]) {\n        return false;\n      }\n    } else if (arrayA[ i ] !== arrayB[ i ]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMinIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return minIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMin (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMinIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMaxIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMax (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMaxIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMaxIndexes (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return [ minIndex, maxIndex ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMax (array, startIndex = 0, endIndex = array.length - 1) {\n  const [ minIndex, maxIndex ] = arrayMinMaxIndexes( array, startIndex, endIndex );\n  return [\n    array[ minIndex ],\n    array[ maxIndex ],\n  ];\n}\n\n/**\n * Finds boundary indexes in an array of numbers\n *\n * @param {Array<number>} array\n * @param {number} value\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchIndexes (array, value, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ] === value) {\n    left = right;\n  } else if (array[ left ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n\n/**\n * @param {Array} arrayA\n * @param {Array} arrayB\n * @return {Array}\n */\nexport function arrayDiff (arrayA = [], arrayB = []) {\n  const dict = Object.create( null );\n\n  for (let i = 0; i < arrayA.length; ++i) {\n    dict[ arrayA[ i ] ] = true;\n  }\n\n  const result = [];\n  for (let i = 0; i < arrayB.length; ++i) {\n    if (!dict[ arrayB[ i ] ]) {\n      result.push( arrayB[ i ] );\n    }\n  }\n\n  return result;\n}\n","/**\n * @param context\n * @param x\n * @param y\n * @param width\n * @param height\n * @param options\n */\nexport function drawRoundedRect (context, x, y, width, height, options = {}) {\n  const {\n    tl = 0, tr = 0,\n    bl = 0, br = 0\n  } = options;\n\n  context.beginPath();\n  \n  context.moveTo(x + tl, y);\n\n  context.lineTo(x + width - tr, y);\n  context.quadraticCurveTo(x + width, y, x + width, y + tr);\n\n  context.lineTo(x + width, y + height - br);\n  context.quadraticCurveTo(x + width, y + height, x + width - br, y + height);\n\n  context.lineTo(x + bl, y + height);\n  context.quadraticCurveTo(x, y + height, x, y + height - bl);\n\n  context.lineTo(x, y + tl);\n  context.quadraticCurveTo(x, y, x + tl, y);\n\n  context.closePath();\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport * as timingFunctions from '../../utils';\n\nlet TWEEN_ID = 1;\n\nexport const TweenState = {\n  NOT_STARTED: 1,\n  RUNNING: 2,\n  PAUSED: 3,\n  COMPLETED: 4,\n  CANCELLED: 5\n};\n\nexport const TweenEvents = {\n  STARTED: 'started',\n  PAUSED: 'paused',\n  COMPLETE: 'complete',\n  CANCELLED: 'cancelled'\n};\n\nconst DEFAULT_PARAMS = {\n  timeScale: 1,\n  duration: 500,\n  timingFunction: 'linear'\n};\n\nexport class Tween extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = TWEEN_ID++;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _params = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _state = TweenState.NOT_STARTED;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = DEFAULT_PARAMS.timeScale;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _duration = DEFAULT_PARAMS.duration;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _timingFunctionName = DEFAULT_PARAMS.timingFunction;\n\n  /**\n   * @type {Function}\n   * @private\n   */\n  _timingFunction = () => {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _target = null;\n\n  /**\n   * @type {Array<string | number>}\n   * @private\n   */\n  _properties = [];\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  _targetValues = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _startValues = [];\n\n  /**\n   * @param {Array<*>} args\n   * @returns {Tween}\n   */\n  static create (...args) {\n    return new Tween( ...args );\n  }\n\n  /**\n   * @param {*} target\n   * @param {string|Array<string | number>} properties\n   * @param {number|Array<number>} targetValues\n   * @param {*} params\n   */\n  constructor (target, properties = [], targetValues = [], params = {}) {\n    super();\n\n    this._target = target;\n    this._properties = [].concat( properties );\n    this._targetValues = [].concat( targetValues );\n    this._initParams( params );\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (!this.isRunning) {\n      return;\n    }\n\n    deltaTime *= this._timeScale;\n    this._timeElapsed += deltaTime;\n\n    this._updateAnimation( deltaTime );\n    this._checkDuration();\n  }\n\n  /**\n   * Runs animation\n   */\n  start () {\n    if (this.isNotStarted) {\n      this._startValues = this._getPropertyValues( this._properties );\n    }\n    this._state = TweenState.RUNNING;\n    this.emit( TweenEvents.STARTED );\n  }\n\n  /**\n   * Stops animation\n   */\n  pause () {\n    this._state = TweenState.PAUSED;\n    this.emit( TweenEvents.PAUSED );\n  }\n\n  /**\n   * Finish & dispose the tween\n   */\n  finish () {\n    this._state = TweenState.COMPLETED;\n    this.emit( TweenEvents.COMPLETE, this._timeElapsed );\n    this._dispose();\n  }\n\n  /**\n   * Cancels current animation\n   */\n  cancel () {\n    this._state = TweenState.CANCELLED;\n    this.emit( TweenEvents.CANCELLED, this._timeElapsed );\n    this._dispose();\n  }\n\n  /**\n   * @param {Array<number>} targetValues\n   */\n  patchAnimation (targetValues = []) {\n    this._targetValues = [].concat( targetValues );\n    this._startValues = this._getPropertyValues( this._properties );\n    this._timeElapsed = 0;\n  }\n\n  /**\n   * @param {number} timeScale\n   */\n  setTimeScale (timeScale = 1) {\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isNotStarted () {\n    return this._state === TweenState.NOT_STARTED;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return this._state === TweenState.RUNNING;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._state === TweenState.PAUSED;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isCompleted () {\n    return this._state === TweenState.COMPLETED;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get duration () {\n    return this._duration;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get timingFunctionName () {\n    return this._timingFunctionName;\n  }\n\n  /**\n   * @returns {Function}\n   */\n  get timingFunction () {\n    return this._timingFunction;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeRemaining () {\n    return Math.max( 0, Math.min( this._duration, this._duration - this._timeElapsed ) );\n  }\n\n  /**\n   * @returns {number}\n   */\n  get progress () {\n    return Math.min( 1, Math.max( 0, this._timeElapsed / this._duration ) );\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentFirstValue () {\n    return this._target[ this._properties[ 0 ] ];\n  }\n\n  /**\n   * @param {*} params\n   * @private\n   */\n  _initParams (params) {\n    let {\n      timeScale,\n      duration,\n      timingFunction\n    } = this._params = Object.assign( {}, DEFAULT_PARAMS, params );\n\n    this._timeScale = timeScale;\n    this._duration = duration;\n    this._timingFunctionName = timingFunction;\n    this._timingFunction = this._getTimingFunction( timingFunction );\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _updateAnimation (deltaTime) {\n    const progress = this.progress;\n    const timingProgress = this._timingFunction( progress );\n\n    for (let i = 0, length = this._properties.length; i < length; ++i) {\n      const property = this._properties[ i ];\n      const delta = ( this._targetValues[ i ] - this._startValues[ i ] ) * timingProgress;\n      this._target[ property ] = this._startValues[ i ] + delta;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _checkDuration () {\n    if (this._timeElapsed >= this._duration) {\n      this.finish();\n    }\n  }\n\n  /**\n   * @param {Array<string>} properties\n   * @returns {Array<number>}\n   * @private\n   */\n  _getPropertyValues (properties = []) {\n    let values = [];\n    for (let i = 0, length = properties.length; i < length; ++i) {\n      values[ i ] = this._getPropertyValue( properties[i] );\n    }\n    return values;\n  }\n\n  /**\n   * @param {string} property\n   * @returns {number}\n   * @private\n   */\n  _getPropertyValue (property) {\n    return this._target[ property ] || 0;\n  }\n\n  /**\n   * @param {string} functionName\n   * @returns {Function}\n   * @private\n   */\n  _getTimingFunction (functionName) {\n    const defaultFunctionName = DEFAULT_PARAMS.timingFunction;\n    return timingFunctions[ functionName ] || timingFunctions[ defaultFunctionName ];\n  }\n\n  /**\n   * Disposes the object\n   *\n   * @private\n   */\n  _dispose () {\n    this._params = null;\n    this._timingFunction = null;\n    this._targetValues = null;\n    this._startValues = null;\n    this._properties = null;\n    this._target = null;\n\n    this.removeAllListeners();\n  }\n}\n","/**\n * @type {{navigatorChart: string, chart: string}}\n */\nexport const ChartTypes = {\n  chart: 'chart',\n  navigatorChart: 'navigatorChart'\n};\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { arrayMinMax } from '../../utils';\nimport { Tween, TweenEvents } from '../animation/Tween';\nimport { ChartTypes } from '../chart2/ChartTypes';\nimport { SeriesTypes } from './SeriesTypes';\n\nlet SERIES_AUTOINCREMENT = 1;\n\nexport const OpacityAnimationType = {\n  hiding: 1,\n  showing: 2\n};\n\nexport class Series extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = SERIES_AUTOINCREMENT++;\n\n  /**\n   * @type {Chart | BaseChart}\n   */\n  chart = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  isMainChart = false;\n\n  /**\n   * @type {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   * @private\n   */\n  settings = {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  seriesOptions = {};\n\n  /**\n   * @type {Array<number>}\n   */\n  xAxis = [];\n\n  /**\n   * @type {Array<number>}\n   */\n  yAxis = [];\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _name = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _label = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _color = '#31a8dc';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  strokeWidth = 1;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _visible = true;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _pathUpdateNeeded = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMinY = 0;\n\n  /**\n   * @type {number}\n   */\n  opacity = 1;\n\n  /**\n   * @type {number}\n   */\n  seriesIndex = -1;\n\n  /**\n   * @type {Tween}\n   */\n  opacityAnimation = null;\n\n  /**\n   * @type {string}\n   */\n  opacityAnimationType = null;\n\n  /**\n   * @param {Chart | BaseChart} chart\n   * @param {*} settings\n   * @param {number} index\n   */\n  constructor (chart, settings = {}, index) {\n    super();\n\n    this.chart = chart;\n    this.seriesIndex = index;\n\n    this.isMainChart = chart.chartType === ChartTypes.chart;\n\n    this.settings = settings;\n    this._parseSettings();\n  }\n\n  /**\n   * Initializes series with options\n   */\n  initialize () {\n    // this.updateGlobalExtremes();\n\n    this.setType( SeriesTypes.line );\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    let pathUpdated = false;\n\n    if (this._pathUpdateNeeded) {\n      this._pathUpdateNeeded = false;\n      pathUpdated = true;\n    }\n\n    if (this.opacityAnimation\n      && this.opacityAnimation.isRunning) {\n      this.opacityAnimation.update( deltaTime );\n      pathUpdated = true;\n    }\n\n    if (pathUpdated) {\n      this.chart.redrawChartNeeded = true;\n    }\n  }\n\n  render (context = this.chart.telechart.mainContext, input) {\n    if (!this.opacity) {\n      return input;\n    }\n\n    const interval = this.chart._viewportPointsIndexes;\n\n    if (!interval.length\n      || interval[ 1 ] - interval[ 0 ] <= 0) {\n      return input;\n    }\n\n    if (!input || input.length === 0) {\n      input = []\n    }\n\n    return this.drawByInterval( context, interval, this.chart.viewportPointsStep, input );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context\n   * @param {Array<number>} interval\n   * @param {number} step\n   * @param input\n   */\n  drawByInterval (context, interval, step = 1, input) {\n    context.globalAlpha = this.opacity;\n    context.strokeStyle = this._color;\n    context.lineWidth = this.strokeWidth;\n    context.lineJoin = 'bevel';\n    context.lineCap = 'butt';\n    context.beginPath();\n\n    if (!this.chart.isYScaled || this.seriesIndex === 0) {\n      this.drawPathToContext(context, interval, step);\n    } else {\n      this.drawPathToContext(context, interval, step, {\n        viewportPixelY: this.chart.viewportPixelY2,\n        currentLocalMinY: this.chart.currentLocalMinY2\n      });\n    }\n\n    context.stroke();\n  }\n\n  /**\n   * @param context\n   * @param interval\n   * @param step\n   * @param settings\n   * @private\n   */\n  drawPathToContext (context, interval, step = 1, settings = {}) {\n    const {\n      viewportRange = this.chart.viewportRange,\n      viewportPixelX = this.chart.viewportPixelX,\n      viewportPixelY = this.chart.viewportPixelY,\n      currentLocalMinY = this.chart.currentLocalMinY\n    } = settings || {};\n\n    const [ startIndex, endIndex ] = interval;\n    const [ minViewportX ] = viewportRange;\n\n    const chartHeight = this.chart.chartHeight;\n    const chartOffsetTop = this.chart.seriesOffsetTop;\n    const chartBottomLineY = chartOffsetTop + chartHeight;\n\n    const dxOffset = minViewportX / viewportPixelX;\n    const dyOffset = currentLocalMinY / viewportPixelY;\n\n    context.moveTo(\n      this.xAxis[ startIndex ] / viewportPixelX - dxOffset,\n      chartBottomLineY - ( this.yAxis[ startIndex ] / viewportPixelY - dyOffset )\n    );\n\n    for (let i = startIndex + 1; i <= endIndex; i += step) {\n      context.lineTo(\n        this.xAxis[ i ] / viewportPixelX - dxOffset,\n        chartBottomLineY - ( this.yAxis[ i ] / viewportPixelY - dyOffset )\n      );\n    }\n  }\n\n  /**\n   * Shows series on the chart\n   */\n  setVisible () {\n    this._visible = true;\n    this._createShowAnimation();\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Hides series from the chart\n   */\n  setInvisible () {\n    this._visible = false;\n    this._createHideAnimation();\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Toggles series\n   */\n  toggleVisible () {\n    this._visible\n      ? this.setInvisible()\n      : this.setVisible();\n  }\n\n  /**\n   * @private\n   */\n  updateLocalExtremes () {\n    const [ rangeStartIndex, rangeEndIndex ] = this.chart._viewportRangeIndexes;\n\n    const [ minValue, maxValue ] = arrayMinMax(\n      this.yAxis, rangeStartIndex, rangeEndIndex\n    );\n\n    this.localMinY = minValue;\n    this.localMaxY = maxValue;\n  }\n\n  /**\n   * @private\n   */\n  updateGlobalExtremes () {\n    const [ minValue, maxValue ] = arrayMinMax(\n      this.yAxis, 0, this.xAxis.length - 1\n    );\n\n    this._globalMinY = minValue;\n    this._globalMaxY = maxValue;\n  }\n\n  /**\n   * Mark to update path in next animation frame\n   */\n  requestPathUpdate () {\n    this._pathUpdateNeeded = true;\n  }\n\n  /**\n   * @param {string} type\n   */\n  setType (type) {\n    this.type = type;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {string}\n   */\n  get label () {\n    return this._label;\n  }\n\n  /**\n   * @return {string}\n   */\n  get color () {\n    return this._color;\n  }\n\n  /**\n   * @return {string}\n   */\n  get name () {\n    return this._name;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isVisible () {\n    return this._visible;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMinY () {\n    return this._globalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMaxY () {\n    return this._globalMaxY;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isShowing () {\n    return this.opacityAnimationType === OpacityAnimationType.showing;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isHiding () {\n    return this.opacityAnimationType === OpacityAnimationType.hiding;\n  }\n\n  /**\n   * @private\n   */\n  _parseSettings () {\n    const {\n      xAxis, yAxis,\n      label, type,\n      color, name,\n      options = {}\n    } = this.settings;\n\n    this.xAxis = xAxis;\n    this.yAxis = yAxis;\n    this._label = label;\n    this._color = color;\n    this._name = name;\n\n    const {\n      strokeWidth = 1\n    } = options;\n\n    this.strokeWidth = strokeWidth;\n\n    this.seriesOptions = options;\n  }\n\n  /**\n   * @private\n   */\n  _createShowAnimation () {\n    if (this.opacityAnimation\n      && this.opacityAnimationType === OpacityAnimationType.showing) {\n      return;\n    }\n    this._createOpacityAnimation( 1 );\n    this.opacityAnimationType = OpacityAnimationType.showing;\n  }\n\n  /**\n   * @private\n   */\n  _createHideAnimation () {\n    if (this.opacityAnimation\n      && this.opacityAnimationType === OpacityAnimationType.hiding) {\n      return;\n    }\n    this._createOpacityAnimation( 0 );\n    this.opacityAnimationType = OpacityAnimationType.hiding;\n  }\n\n  /**\n   * @param {number} opacity\n   * @private\n   */\n  _createOpacityAnimation (opacity) {\n    const duration = 300;\n    const timingFunction = this.chart.isPercentage ? 'easeInOutCubic' : 'easeInOutQuad';\n\n    this.opacityAnimation = new Tween(this, 'opacity', opacity, {\n      duration,\n      timingFunction\n    });\n\n    const onFinished = _ => {\n      this.opacityAnimation = null;\n      this.opacityAnimationType = null;\n      this.requestPathUpdate();\n    };\n\n    this.opacityAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this.opacityAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this.opacityAnimation.start();\n  }\n}\n","import { Series } from './Series';\nimport { SeriesTypes } from './SeriesTypes';\n\nexport class BarSeries extends Series {\n\n  initialize () {\n    super.initialize();\n\n    this.setType( SeriesTypes.bar );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context\n   * @param {Array<number>} interval\n   * @param {number} step\n   * @param input\n   */\n  drawByInterval (context, interval, step = 1, input) {\n    return this.drawBarsToContext( context, interval, step, input );\n  }\n\n  /**\n   * @param context\n   * @param interval\n   * @param step\n   * @param input\n   * @param settings\n   * @private\n   */\n  drawBarsToContext (context, interval, step = 1, input = [], settings = {}) {\n    const {\n      viewportRange = this.chart.viewportRange,\n      viewportPixelX = this.chart.viewportPixelX,\n      viewportPixelY = this.chart.viewportPixelY,\n      currentLocalMinY = this.chart.currentLocalMinY\n    } = settings || {};\n\n    const [ startIndex, endIndex ] = interval;\n    const [ minViewportX ] = viewportRange;\n\n    const chartHeight = this.chart.chartHeight;\n    const chartOffsetTop = this.chart.seriesOffsetTop;\n    const chartBottomLineY = chartOffsetTop + chartHeight;\n\n    const dxOffset = minViewportX / viewportPixelX;\n    const dyOffset = currentLocalMinY / viewportPixelY + chartBottomLineY;\n\n    const barScale = this.opacity;\n    let barWidthX = this.xAxis[ startIndex + step ] - this.xAxis[ startIndex ];\n\n    if (!barWidthX) {\n      barWidthX = this.xAxis[ startIndex ] - this.xAxis[ startIndex - step ];\n    }\n\n    const barHalfWidthX = barWidthX * .5;\n\n    context.fillStyle = this.color;\n\n    for (let i = startIndex, inputIndex = 0; i <= endIndex; i += step, ++inputIndex) {\n      // set if undefined\n      input[ inputIndex ] = input[ inputIndex ] || 0;\n\n      const startY = input[ inputIndex ];\n      const barHeightY = this.yAxis[ i ] * barScale;\n      input[ inputIndex ] += barHeightY;\n\n      let x = ( this.xAxis[ i ] - barHalfWidthX ) / viewportPixelX - dxOffset - .5;\n      let y = dyOffset - ( startY + barHeightY ) / viewportPixelY - .5;\n      let width = barWidthX / viewportPixelX + 1;\n      let height = barHeightY / viewportPixelY + 1;\n\n      context.fillRect( x, y, width, height );\n    }\n\n    context.fill();\n\n    return input;\n  }\n}\n","import { Series } from './Series';\nimport { SeriesTypes } from './SeriesTypes';\n\nexport class PercentageAreaSeries extends Series {\n\n  initialize () {\n    super.initialize();\n\n    this.setType( SeriesTypes.area );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context\n   * @param {Array<number>} interval\n   * @param {number} step\n   * @param input\n   */\n  drawByInterval (context, interval, step = 1, input) {\n    return this.drawAreasToContext( context, interval, step, input );\n  }\n\n  /**\n   * @param context\n   * @param interval\n   * @param step\n   * @param input\n   * @param settings\n   * @private\n   */\n  drawAreasToContext (context, interval, step = 1, input = [], settings = {}) {\n    const chartOffsetTop = this.chart.seriesOffsetTop + ( this.chart.isMainChart ? 14 : 0 );\n    const chartHeight = this.chart.chartHeight - ( this.chart.isMainChart ? 14 : 0 );\n\n    const {\n      viewportRange = this.chart.viewportRange,\n      viewportPixelX = this.chart.viewportPixelX,\n      viewportPixelY = 100 / chartHeight,\n      currentLocalMinY = 0\n    } = settings || {};\n\n    const [ startIndex, endIndex ] = interval;\n    const [ minViewportX ] = viewportRange;\n\n    const chartBottomLineY = chartOffsetTop + chartHeight;\n\n    const dxOffset = minViewportX / viewportPixelX;\n    const dyOffset = currentLocalMinY / viewportPixelY + chartBottomLineY;\n\n    const scale = this.opacity;\n    const stackedSumTree = this.chart.stackedSumTree;\n    const sumTreeOffset = this.chart.computeSumTreeChunkOffset();\n    const useAdditionalSums = this.chart.areaAdditionalSumsNeeded;\n    const additionalSums = this.chart.areaAdditionalSums;\n\n    context.globalAlpha = 1;\n    context.fillStyle = this.color;\n    context.beginPath();\n\n    for (let i = startIndex, inputIndex = 0; i <= endIndex; i += step, ++inputIndex) {\n      // set if undefined\n      input[ inputIndex ] = input[ inputIndex ] || 0;\n\n      const startY = input[ inputIndex ]; // prev percents\n      let sum = stackedSumTree[ sumTreeOffset + i ] + (\n        useAdditionalSums\n          ? additionalSums[ i ]\n          : 0\n      );\n      const curY = this.yAxis[ i ]; // current Y value\n      const heightY = curY / sum * 100 * scale; // current percents Y / SUM * animationScale\n\n      input[ inputIndex ] += heightY;\n\n      let x = this.xAxis[ i ] / viewportPixelX - dxOffset;\n      let y = dyOffset - startY / viewportPixelY;\n\n      if (i === startIndex) {\n        context.moveTo( x, y );\n      } else {\n        context.lineTo( x, y );\n      }\n\n      if (i === endIndex) {\n        context.lineTo( x, chartOffsetTop );\n        context.lineTo( this.xAxis[ startIndex ] / viewportPixelX - dxOffset, chartOffsetTop );\n      }\n    }\n\n    context.closePath();\n    context.fill();\n\n    return input;\n  }\n}\n","import { Series } from './Series';\nimport { BarSeries } from './BarSeries';\nimport { PercentageAreaSeries } from './PercentageAreaSeries';\n\nexport const SeriesTypes = {\n  x: 'x',\n  line: 'line',\n  bar: 'bar',\n  area: 'area',\n};\n\nexport const SeriesTypeMapping = {\n  [SeriesTypes.line]: Series,\n  [SeriesTypes.bar]: BarSeries,\n  [SeriesTypes.area]: PercentageAreaSeries,\n};\n","export const ChartEvents = {\n  SERIES_VISIBLE_CHANGE: 'seriesVisibleChange',\n  FORCE_BUTTONS_UPDATE: 'forceButtonsUpdate',\n\n  SHOW_CURSOR: 'showCursor',\n  HIDE_CURSOR: 'hideCursor',\n  REDRAW_CURSOR: 'redrawCursor',\n  TRANSLATE_MARKERS: 'translateMarkers',\n};\n","import { EventEmitter } from '../../misc/EventEmitter';\nimport { Tween, TweenEvents } from '../../animation/Tween';\nimport { arrayDiff } from '../../../utils';\n\nexport const AxisElementState = {\n  pending: 1,\n  showing: 2,\n  hiding: 3\n};\n\nexport class ChartAxis extends EventEmitter {\n\n  /**\n   * @type {Chart | BaseChart}\n   */\n  chart = null;\n\n  /**\n   * @type {Array<string | number>}\n   */\n  axesValues = [];\n\n  /**\n   * @type {Array<{animation: Tween, state: number, value: *, opacity: number}>}\n   */\n  elements = [];\n\n  /**\n   * @type {Array}\n   */\n  animations = [];\n\n  /**\n   * @type {boolean}\n   */\n  updateAnimationsNeeded = false;\n\n  /**\n   * @type {boolean}\n   */\n  redrawNeeded = true;\n\n  /**\n   * @type {number}\n   */\n  fontSize = 12;\n\n  /**\n   * @param {BaseChart | Chart} chart\n   */\n  constructor (chart) {\n    super();\n\n    this.chart = chart;\n  }\n\n  initialize () {\n    this.updateValues();\n    this.initializeWrappers();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (this.hasActiveAnimations) {\n      this.animationTick( deltaTime );\n    }\n\n    if (this.updateAnimationsNeeded) {\n      this.updateAnimations( this.updateAnimationsWithoutAnimations );\n\n      this.updateAnimationsNeeded = false;\n      this.updateAnimationsWithoutAnimations = false;\n    }\n  }\n\n  render () {\n    if (this.redrawNeeded || this.chart.telechart.forceRedraw) {\n      this.redraw();\n\n      this.redrawNeeded = false;\n    }\n  }\n\n  redraw () {\n  }\n\n  requestUpdateAnimations (withoutAnimations = false) {\n    this.updateAnimationsWithoutAnimations = withoutAnimations;\n    this.updateAnimationsNeeded = true;\n  }\n\n  requestRedraw () {\n    this.redrawNeeded = true;\n  }\n\n  animationTick (deltaTime) {\n    let hasAnimations = false;\n\n    for (let i = 0; i < this.animations.length; ++i) {\n      const animation = this.animations[ i ];\n      if (animation && animation.isRunning) {\n        animation.update( deltaTime );\n        this.redrawNeeded = true;\n        hasAnimations = true;\n      }\n    }\n\n    this.hasActiveAnimations = hasAnimations;\n  }\n\n  updateAnimations (withoutAnimations = false) {\n    const oldValues = this.axesValues;\n\n    this.updateValues();\n\n    const valuesToDelete = arrayDiff( this.axesValues, oldValues );\n    const valuesToCreate = this.axesValues.filter(value => {\n      return oldValues.indexOf( value ) === -1;\n    });\n\n    this.createNewElements( valuesToCreate, withoutAnimations );\n    this.deleteOldElements( valuesToDelete, withoutAnimations );\n  }\n\n  /**\n   * @param valuesToCreate\n   * @param withoutAnimations\n   */\n  createNewElements (valuesToCreate, withoutAnimations) {\n    let animateElements = [];\n\n    for (let i = 0; i < valuesToCreate.length; ++i) {\n      let element = this._getElementByValue( valuesToCreate[ i ] );\n\n      if (element\n        && element.state === AxisElementState.showing) {\n        continue;\n      }\n\n      let created = false;\n\n      if (!element) {\n        element = this.initializeWrapper( valuesToCreate[ i ], withoutAnimations );\n        created = true;\n        this.elements.push( element );\n      } else if (element.animation) {\n        element.startOpacity = element.animationObject.opacity;\n      } else {\n        element.startOpacity = 0;\n      }\n\n      if (!created || created && !withoutAnimations) {\n        // not created or created with animation\n        animateElements.push( element );\n      }\n    }\n\n    if (animateElements.length) {\n      const animation = this.createShowingAnimation( animateElements );\n      this.animations.push( animation );\n    }\n  }\n\n  /**\n   * @param value\n   * @abstract\n   */\n  initializeWrapper (value) {\n  }\n\n  /**\n   * @param valuesToDelete\n   * @param withoutAnimations\n   */\n  deleteOldElements (valuesToDelete, withoutAnimations) {\n    let animateElements = [];\n\n    for (let i = 0; i < valuesToDelete.length; ++i) {\n      let element = this._getElementByValue( valuesToDelete[ i ] );\n\n      if (!element\n        || element.state === AxisElementState.hiding) {\n        // already hiding or deleted\n        continue;\n      }\n\n      if (withoutAnimations) {\n        this.detachElement( element );\n        continue;\n      }\n\n      if (element.animation) {\n        element.startOpacity = element.animationObject.opacity;\n      } else {\n        element.startOpacity = 1;\n      }\n\n      animateElements.push( element );\n    }\n\n    if (animateElements.length) {\n      const animation = this.createHidingAnimation( animateElements );\n\n      this.animations.push( animation );\n    }\n  }\n\n  /**\n   * @param {*} elements\n   * @return {Tween}\n   */\n  createShowingAnimation (elements) {\n    const onComplete = _ => {\n      for (let i = 0; i < elements.length; ++i) {\n        const element = elements[ i ];\n\n        if (element.animationId === animation.id) {\n          element.animation = null;\n          element.animationId = null;\n          element.animationObject = null;\n          element.state = AxisElementState.pending;\n          element.opacity = 1;\n        }\n      }\n\n      this.detachAnimation( animation );\n    };\n\n    const animationObject = {\n      opacity: 0\n    };\n\n    const animation = new Tween(animationObject, 'opacity', 1, {\n      duration: 200,\n      timingFunction: 'easeInOutQuad'\n    });\n    animation.on( TweenEvents.COMPLETE, onComplete );\n    animation.start();\n\n    for (let i = 0; i < elements.length; ++i) {\n      const element = elements[ i ];\n      element.animation = animation;\n      element.animationId = animation.id;\n      element.animationObject = animationObject;\n      element.startOpacity = element.startOpacity || 0;\n      element.opacityScale = 1 - element.startOpacity;\n      element.state = AxisElementState.showing;\n    }\n\n    this.hasActiveAnimations = true;\n\n    return animation;\n  }\n\n  /**\n   * @param {*} elements\n   * @return {Tween}\n   */\n  createHidingAnimation (elements) {\n    const onComplete = _ => {\n      for (let i = 0; i < elements.length; ++i) {\n        const element = elements[ i ];\n\n        if (element.animationId === animation.id) {\n          element.animation = null;\n          element.animationId = null;\n          element.animationObject = null;\n          element.state = AxisElementState.pending;\n          element.opacity = 0;\n\n          this.detachElement( element );\n        }\n      }\n\n      this.detachAnimation( animation );\n    };\n\n    const animationObject = {\n      opacity: 1\n    };\n\n    const animation = new Tween(animationObject, 'opacity', 0, {\n      duration: 150,\n      timingFunction: 'easeInOutQuad'\n    });\n\n    animation.on( TweenEvents.COMPLETE, onComplete );\n    animation.start();\n\n    for (let i = 0; i < elements.length; ++i) {\n      const element = elements[ i ];\n      element.animation = animation;\n      element.animationId = animation.id;\n      element.animationObject = animationObject;\n      element.startOpacity = element.startOpacity || 1;\n      element.opacityScale = element.startOpacity;\n      element.state = AxisElementState.hiding;\n    }\n\n    this.hasActiveAnimations = true;\n\n    return animation;\n  }\n\n  /**\n   * @param {{state: *, value: *, id: number, animation: Tween}} element\n   */\n  detachElement (element) {\n    const indexToDelete = this._getElementIndexById( element.id );\n    this.elements.splice( indexToDelete, 1 );\n  }\n\n  /**\n   * @param {Tween} animation\n   */\n  detachAnimation (animation) {\n    const indexToDelete = this._getAnimationIndexById( animation.id );\n    this.animations.splice( indexToDelete, 1 );\n  }\n\n  initializeWrappers () {\n    const values = this.axesValues;\n\n    for (let i = 0; i < values.length; ++i) {\n      const element = this.initializeWrapper( values[ i ] );\n\n      // without animation\n      element.state = AxisElementState.pending;\n      element.opacity = 1;\n\n      this.elements.push( element );\n    }\n  }\n\n  /**\n   * @return {Array<string | number>}\n   */\n  computeAxisValues () {\n    return [];\n  }\n\n  /**\n   * Updates axes values\n   */\n  updateValues () {\n    this.axesValues = this.computeAxisValues();\n  }\n\n  onChartResize () {\n    this.redrawNeeded = true;\n    this.redraw();\n  }\n\n  /**\n   * @param {Function} fn\n   */\n  eachElement (fn = () => {}) {\n    for (let i = 0; i < this.elements.length; ++i) {\n      fn( this.elements[ i ] );\n    }\n  }\n\n  /**\n   * @param value\n   * @return {{animation: Tween, state: number, value: *, opacity: number}}\n   * @private\n   */\n  _getElementByValue (value) {\n    for (let i = 0; i < this.elements.length; ++i) {\n      const elementValue = this.elements[ i ].value;\n      if (value === elementValue) {\n        return this.elements[ i ];\n      }\n    }\n  }\n\n  /**\n   * @param value\n   * @return {number}\n   * @private\n   */\n  _getElementIndexByValue (value) {\n    for (let i = 0; i < this.elements.length; ++i) {\n      if (value === this.elements[ i ].value) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * @param id\n   * @return {number}\n   * @private\n   */\n  _getElementIndexById (id) {\n    for (let i = 0; i < this.elements.length; ++i) {\n      if (id === this.elements[ i ].id) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * @param id\n   * @return {number}\n   * @private\n   */\n  _getAnimationIndexById (id) {\n    for (let i = 0; i < this.animations.length; ++i) {\n      if (id === this.animations[ i ].id) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n}\n","import { AxisElementState, ChartAxis } from './ChartAxis';\nimport { ensureNumber } from '../../../utils';\n\nlet AUTOINCREMENT_ID = 1;\n\nexport class ChartAxisY extends ChartAxis {\n\n  /**\n   * @type {*}\n   */\n  // axesValuesMapping = {};\n\n  /**\n   * @type {boolean}\n   */\n  isDoubleAxis = false;\n\n  /**\n   * @param {BaseChart | Chart} chart\n   * @param {boolean} isDoubleAxis\n   */\n  constructor (chart, isDoubleAxis) {\n    super( chart );\n\n    this.isDoubleAxis = isDoubleAxis;\n  }\n\n  redraw () {\n    const context = this.chart.telechart.axisContext;\n\n    context.clearRect( 0, 0, this.chart.chartWidth, this.chart.chartHeight + this.chart.seriesOffsetTop + 1 );\n\n    const firstLine = this.chart.series[ 0 ];\n    const drawAxes = !this.isDoubleAxis || firstLine.isVisible;\n\n    this.drawLeft( context, drawAxes );\n  }\n\n  drawLeft (context, drawAxes = false) {\n    const line = this.chart.series[ 0 ];\n\n    if (this.isDoubleAxis && line.opacity <= 0) {\n      return;\n    }\n\n    const textColor = this.textColorLeft;\n    const textColorAlpha = this.textColorLeftAlpha;\n    const axesColor = this.axesColor;\n    const axesColorAlpha = this.axesColorAlpha;\n\n    const fontSize = this.fontSize;\n\n    // values\n    context.font = `${fontSize}px Arial`;\n    context.fillStyle = textColor;\n    context.textAlign = \"left\";\n\n    // axes\n    context.strokeStyle = axesColor;\n    context.lineWidth = 1;\n\n    const x = this.chart.viewportPadding;\n    const axisWidth = this.chart.chartWidth - this.chart.viewportPadding * 2;\n\n    const topBorder = 0;\n    const bottomBorder = this.chart.chartHeight + this.chart.seriesOffsetTop + this.chart.seriesOffsetBottom;\n\n    for (let i = 0; i < this.elements.length; ++i) {\n      const element = this.elements[ i ];\n      const y = this._computeValuePosition( element.value );\n\n      if (y < topBorder || y > bottomBorder) {\n        continue;\n      }\n\n      const animation = element.animation;\n      const hasAnimation = !!animation;\n      const isShowing = hasAnimation ? element.state === AxisElementState.showing : false;\n      const opacity = hasAnimation\n        ? (isShowing\n            ? element.startOpacity + element.animationObject.opacity * element.opacityScale\n            : element.animationObject.opacity * element.opacityScale\n        )\n        : element.opacity;\n\n      context.globalAlpha = textColorAlpha * opacity * ( this.isDoubleAxis ? line.opacity : 1 );\n      context.fillText(element.formattedValue, x, y - 5);\n\n      if (drawAxes) {\n        context.globalAlpha = axesColorAlpha * opacity;\n        context.beginPath();\n        context.moveTo(x, y);\n        context.lineTo(x + axisWidth, y);\n        context.stroke();\n      }\n    }\n  }\n\n  computeAxisValues () {\n    const chart = this.chart;\n    const isPercentage = this.chart.isPercentage;\n    const viewportPixelY = this.chart.computeViewportPixelY( chart.localMinY, chart.localMaxY );\n    const viewportMinY = chart.localMinY;\n    const viewportMaxY = chart.localMaxY - (\n      isPercentage\n        ? 5\n        : (this.chart.seriesOffsetTop + this.fontSize) * viewportPixelY\n    );\n    const distance = viewportMaxY - viewportMinY;\n\n    if (!distance) {\n      return [];\n    }\n\n    const valuesNumber = this.chart.isPercentage ? 4 : 5;\n    let deltaY = distance / valuesNumber;\n\n    let currentValue = viewportMinY;\n    let result = [ currentValue ];\n\n    for (let i = 0; i <= valuesNumber; ++i) {\n      result.unshift( currentValue + deltaY );\n      currentValue += deltaY;\n    }\n\n    return result;\n  }\n\n  /**\n   * @param value\n   * @param withoutAnimations\n   * @return {{animation: Tween, state: number, opacity: number, value: *}}\n   */\n  initializeWrapper (value, withoutAnimations = false) {\n    return {\n      id: AUTOINCREMENT_ID++,\n      value, //: this.roundValue( value ),\n      formattedValue: this.formatNumber( value ),\n      opacity: withoutAnimations ? 1 : 0,\n      startOpacity: withoutAnimations ? 1 : 0,\n      animation: null,\n      animationId: null,\n      state: AxisElementState.showing\n    };\n  }\n\n  updateValues () {\n    super.updateValues();\n  }\n\n  get textColor () {\n    return this.chart.isBarChart || this.chart.isPercentage\n      ? this.chart.telechart.themeColors.barAxisTextColorY\n      : this.chart.telechart.themeColors.axisTextColor;\n  }\n\n  get textColorAlpha () {\n    return this.chart.isBarChart || this.chart.isPercentage\n      ? this.chart.telechart.themeColors.barAxisTextColorAlphaY\n      : this.chart.telechart.themeColors.axisTextColorAlpha;\n  }\n\n  get textColorLeft () {\n    const yScaled = this.chart.isYScaled;\n\n    return yScaled\n      ? this.chart.series[ 0 ].color\n      : this.textColor;\n  }\n\n  get textColorLeftAlpha () {\n    const yScaled = this.chart.isYScaled;\n\n    return yScaled\n      ? 1\n      : this.textColorAlpha;\n  }\n\n  get textColorRight () {\n    const yScaled = this.chart.isYScaled;\n\n    return yScaled\n      ? this.chart.series[ 1 ].color\n      : this.textColor;\n  }\n\n  get textColorRightAlpha () {\n    const yScaled = this.chart.isYScaled;\n\n    return yScaled\n      ? 1\n      : this.textColorAlpha;\n  }\n\n  get axesColor () {\n    return this.chart.telechart.themeColors.axisColor;\n  }\n\n  get axesColorAlpha () {\n    return this.chart.telechart.themeColors.axisColorAlpha;\n  }\n\n  /**\n   * @param value\n   * @return {number}\n   * @private\n   */\n  _computeValuePosition (value) {\n    return this.chart.projectYToCanvas( value );\n  }\n\n  /**\n   * @param value\n   * @return {number}\n   * @private\n   */\n  roundValue (value) {\n    return ~~( value + .5 );\n  }\n\n  /**\n   * @param {number} value\n   */\n  formatNumber (value) {\n    const v = Math.abs( ensureNumber( value ) );\n    let symbol = '';\n\n    const compressedValue = v >= 1.0e+9\n      ? (symbol = 'B', v / 1.0e+9)\n      : v >= 1.0e+6\n        ? (symbol = 'M', v / 1.0e+6)\n        : v >= 1.0e+3\n          ? (symbol = 'K', v / 1.0e+3)\n          : v;\n\n    return 1 * ( compressedValue.toFixed( symbol ? 1 : 0 ) ) + symbol;\n  }\n}\n\n","import { AxisElementState } from './ChartAxis';\nimport { ChartAxisY } from './ChartAxisY';\n\nexport class ChartAxisY2 extends ChartAxisY {\n\n  redraw () {\n    const context = this.chart.telechart.axisContext;\n\n    const firstLine = this.chart.series[ 0 ];\n    const drawAxes = !this.isDoubleAxis || !firstLine.isVisible;\n\n    this.drawRight( context, drawAxes );\n  }\n\n  drawRight (context, drawAxes = false) {\n    const line = this.chart.series[ 1 ];\n\n    if (line.opacity <= 0) {\n      return;\n    }\n\n    const textColor = this.textColorRight;\n    const textColorAlpha = this.textColorRightAlpha;\n    const axesColor = this.axesColor;\n    const axesColorAlpha = this.axesColorAlpha;\n\n    const fontSize = this.fontSize;\n\n    // values\n    context.font = `${fontSize}px Arial`;\n    context.fillStyle = textColor;\n    context.textAlign = \"right\";\n\n    // axes\n    context.strokeStyle = axesColor;\n    context.lineWidth = 1;\n\n    const x = this.chart.chartWidth - this.chart.viewportPadding;\n    const axisWidth = this.chart.chartWidth - this.chart.viewportPadding * 2;\n\n    const topBorder = 0;\n    const bottomBorder = this.chart.chartHeight + this.chart.seriesOffsetTop + this.chart.seriesOffsetBottom;\n\n    for (let i = 0; i < this.elements.length; ++i) {\n      const element = this.elements[ i ];\n      const y = this._computeValuePosition( element.value );\n\n      if (y < topBorder || y > bottomBorder) {\n        continue;\n      }\n\n      const animation = element.animation;\n      const hasAnimation = !!animation;\n      const isShowing = hasAnimation ? element.state === AxisElementState.showing : false;\n      const opacity = hasAnimation\n        ? (isShowing\n            ? element.startOpacity + element.animationObject.opacity * element.opacityScale\n            : element.animationObject.opacity * element.opacityScale\n        )\n        : element.opacity;\n\n      context.globalAlpha = textColorAlpha * opacity * ( this.isDoubleAxis ? line.opacity : 1 );\n      context.fillText(element.formattedValue, x, y - 5);\n\n      if (drawAxes) {\n        context.globalAlpha = axesColorAlpha * opacity;\n        context.beginPath();\n        context.moveTo( this.chart.viewportPadding, y);\n        context.lineTo( this.chart.viewportPadding + axisWidth, y);\n        context.stroke();\n      }\n    }\n  }\n\n  computeAxisValues () {\n    const chart = this.chart;\n    const viewportPixelY2 = this.chart.computeViewportPixelY2( chart.localMinY2, chart.localMaxY2 );\n    const viewportMinY2 = chart.localMinY2;\n    const viewportMaxY2 = chart.localMaxY2 - (this.chart.seriesOffsetTop + this.fontSize) * viewportPixelY2;\n    const distance = viewportMaxY2 - viewportMinY2;\n\n    if (!distance) {\n      return [];\n    }\n\n    let deltaY = distance / 5;\n\n    let currentValue = viewportMinY2;\n    let result = [ currentValue ];\n\n    for (let i = 0; i < 6; ++i) {\n      result.unshift( currentValue + deltaY );\n      currentValue += deltaY;\n    }\n\n    return result;\n  }\n\n  /**\n   * @param value\n   * @return {number}\n   * @private\n   */\n  _computeValuePosition (value) {\n    return this.chart.projectYToCanvas2( value );\n  }\n}\n\n","import { AxisElementState, ChartAxis } from './ChartAxis';\nimport { zeroFill } from '../../../utils';\n\nlet AUTOINCREMENT_ID = 1;\n\nexport class ChartAxisX extends ChartAxis {\n\n  /**\n   * @type {Object}\n   */\n  dateCache = Object.create( {} );\n\n  /**\n   * @type {*}\n   */\n  axesValuesMapping = {};\n\n  /**\n   * @type {number}\n   */\n  labelWidth = 37;\n\n  /**\n   * @type {number|null}\n   * @private\n   */\n  interval = null;\n\n  redraw () {\n    const context = this.chart.telechart.axisContext;\n\n    const y = this.chart.chartHeight + this.chart.seriesOffsetTop + 1;\n\n    context.clearRect( 0, y, this.chart.chartWidth, this.chart.seriesOffsetBottom );\n\n    this.draw( context );\n  }\n\n  draw (context) {\n    const textColor = this.textColor;\n    const textColorAlpha = this.textColorAlpha;\n\n    const fontSize = this.fontSize;\n\n    // values\n    context.font = `${fontSize}px Arial`;\n    context.fillStyle = textColor;\n    context.textAlign = \"center\";\n\n    const y = this.chart.chartHeight + this.chart.seriesOffsetTop + this.fontSize + 4;\n\n    const leftBorder = -this.labelWidth / 2;\n    const rightBorder = this.chart.chartWidth + this.labelWidth / 2;\n\n    for (let i = 0; i < this.elements.length; ++i) {\n      const element = this.elements[ i ];\n      const x = this._computeValuePosition( this.axesValuesMapping[ element.value ] );\n\n      if (x < leftBorder || x > rightBorder) {\n        continue;\n      }\n\n      const animation = element.animation;\n      const hasAnimation = !!animation;\n      const isShowing = hasAnimation ? element.state === AxisElementState.showing : false;\n      const opacity = hasAnimation\n        ? (isShowing\n            ? element.startOpacity + element.animationObject.opacity * element.opacityScale\n            : element.animationObject.opacity * element.opacityScale\n        )\n        : element.opacity;\n\n      context.globalAlpha = textColorAlpha * opacity;\n      context.fillText(element.formattedValue, x, y);\n    }\n  }\n\n  computeAxisValues () {\n    const chart = this.chart;\n    const chartWidth = chart.chartWidth;\n    const minLabelWidth = 60;\n    const pixelX = this.chart.viewportPixelX;\n    const viewportMinX = chart.viewportRange[ 0 ];\n    const viewportMaxX = chart.viewportRange[ 1 ];\n    const distance = viewportMaxX - viewportMinX;\n\n    if (!distance) {\n      return [];\n    }\n\n    const maxAvailableLabels = chartWidth / minLabelWidth;\n\n    if (this.interval == null) {\n      this.interval = pixelX * chartWidth / maxAvailableLabels;\n    }\n\n    const intervalInPixels = this.interval / pixelX;\n    if (intervalInPixels < minLabelWidth) {\n      this.interval *= 2;\n    } else if (intervalInPixels > minLabelWidth * 2) {\n      this.interval *= .5;\n    }\n\n    let currentValue = viewportMaxX - pixelX * minLabelWidth / 2;\n\n    if (this.axesValues.length > 0) {\n      let foundByPrev = false;\n\n      for (let i = this.axesValues.length - 1; i >= 0; --i) {\n        const currentLastValue = this.axesValuesMapping[ this.axesValues[ i ] ];\n        const prevValue = currentLastValue - this.interval;\n        const nextValue = currentLastValue + this.interval;\n\n        if (viewportMaxX > prevValue && viewportMaxX < nextValue) {\n          currentValue = currentLastValue;\n          foundByPrev = true;\n          break;\n        }\n      }\n\n      const currentLastValue = this.axesValuesMapping[ this.axesValues[ this.axesValues.length - 1 ] ];\n\n      if (!foundByPrev && ( currentLastValue + this.interval * 2 >= viewportMaxX )) {\n        currentValue = currentLastValue + this.interval;\n      }\n    }\n\n    let result = [];\n\n    while (currentValue >= viewportMinX) {\n      result.unshift( currentValue );\n      currentValue -= this.interval;\n    }\n\n    return result;\n  }\n\n  /**\n   * @param value\n   * @param withoutAnimations\n   * @return {{animation: Tween, state: number, opacity: number, value: *}}\n   */\n  initializeWrapper (value, withoutAnimations = false) {\n    let formattedValue = this._toDateString( value );\n    const parts = formattedValue.split( ' ' );\n    formattedValue = [ parts[0], parts[1] ].join( ' ' );\n\n    return {\n      id: AUTOINCREMENT_ID++,\n      value,\n      formattedValue,\n      opacity: withoutAnimations ? 1 : 0,\n      startOpacity: withoutAnimations ? 1 : 0,\n      animation: null,\n      animationId: null,\n      state: AxisElementState.showing\n    };\n  }\n\n  updateValues () {\n    super.updateValues();\n\n    const dates = this.axesValues.map(value => {\n      return this._toDateString( value );\n    });\n\n    for (let i = 0; i < dates.length; ++i) {\n      this.axesValuesMapping[ dates[ i ] ] = this.axesValues[ i ];\n    }\n\n    this.axesValues = dates;\n  }\n\n\n  get textColor () {\n    return this.chart.isBarChart || this.chart.isPercentage\n      ? this.chart.telechart.themeColors.barAxisTextColorX\n      : this.chart.telechart.themeColors.axisTextColor;\n  }\n\n  get textColorAlpha () {\n    return this.chart.isBarChart || this.chart.isPercentage\n      ? this.chart.telechart.themeColors.barAxisTextColorAlphaX\n      : this.chart.telechart.themeColors.axisTextColorAlpha;\n  }\n\n  /**\n   * @param value\n   * @return {number}\n   * @private\n   */\n  _computeValuePosition (value) {\n    return this.chart.projectXToCanvas( value );\n  }\n\n  /**\n   * @param {number} value\n   * @param {boolean} withHours\n   * @return {string}\n   * @private\n   */\n  _toDateString (value, withHours = false) {\n    if (typeof value === 'string') {\n      return value;\n    }\n\n    value = Math.floor( value );\n\n    const cacheKey = value.toString();\n    if (this.dateCache[ cacheKey ]) {\n      return this.dateCache[ cacheKey ];\n    }\n\n    const date = new Date( value );\n    const datePart = date.toUTCString().split( ' ' );\n\n    const base = `${datePart[ 2 ]} ${datePart[ 1 ]} ${date.getFullYear()}`;\n\n    let result = base;\n\n    if (withHours) {\n      result = `${zeroFill(date.getHours())}:${zeroFill(date.getMinutes())} ` + base;\n    }\n\n    this.dateCache[ cacheKey ] = result;\n\n    return result;\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { SeriesTypeMapping, SeriesTypes } from '../series/SeriesTypes';\nimport { OpacityAnimationType, Series } from '../series/Series';\nimport { Tween, TweenEvents } from '../animation/Tween';\nimport { ChartTypes } from './ChartTypes';\nimport { ChartEvents } from './events/ChartEvents';\nimport { ChartAxisY } from './axis/ChartAxisY';\nimport { ChartAxisY2 } from './axis/ChartAxisY2';\nimport { ChartAxisX } from './axis/ChartAxisX';\n\nimport {\n  arrayMax,\n  arraysEqual,\n  binarySearchIndexes, ChartVariables,\n  clampNumber,\n  ensureNumber,\n  isDate,\n} from '../../utils';\n\nlet CHART_ID = 1;\n\nexport class BaseChart extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = CHART_ID++;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _type = '';\n\n  /**\n   * @type {Telechart2}\n   */\n  telechart = null;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  options = null;\n\n  /**\n   * @type {number}\n   * @private\n   * @default 2\n   */\n  _groupingPixels = 2;\n\n  /**\n   * @type {Array<number>}\n   */\n  xAxis = [];\n\n  /**\n   * @type {Array<Series>}\n   */\n  series = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRange = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRangeIndexes = [];\n\n  /**\n   * @type {Array<number>}\n   */\n  _viewportPointsIndexes = [ 0, 0 ];\n\n  /**\n   * @type {number}\n   */\n  viewportPointsStep = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportDistance = 0;\n\n  /**\n   * @type {number}\n   */\n  viewportPixelX = 0;\n\n  /**\n   * @type {number}\n   */\n  viewportPixelY = 0;\n\n  /**\n   * @type {number}\n   */\n  viewportPixelY2 = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPadding = 13;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportLeftPaddingScale = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportRightPaddingScale = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportRangeUpdateNeeded = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportPointsGroupingNeeded = false;\n\n  /**\n   * @type {number}\n   */\n  localMinY = 0;\n\n  /**\n   * @type {number}\n   */\n  localMaxY = 0;\n\n  /**\n   * @type {number}\n   */\n  localMinY2 = 0;\n\n  /**\n   * @type {number}\n   */\n  localMaxY2 = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMaxY = 0;\n\n  /**\n   * @type {number}\n   */\n  currentLocalMinY = null;\n\n  /**\n   * @type {number}\n   */\n  currentLocalMaxY = null;\n\n  /**\n   * @type {number}\n   */\n  currentLocalMinY2 = null;\n\n  /**\n   * @type {number}\n   */\n  currentLocalMaxY2 = null;\n\n  /**\n   * @type {Tween}\n   */\n  minMaxYAnimation = null;\n\n  /**\n   * @type {number}\n   */\n  minMaxYAnimationSign = null;\n\n  /**\n   * @type {Tween}\n   */\n  minMaxYAnimation2 = null;\n\n  /**\n   * @type {number}\n   */\n  minMaxYAnimationSign2 = null;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _rangeAnimation = null;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _rangeAnimationObject = {};\n\n  /**\n   * @type {boolean}\n   */\n  cursorInsideChart = false;\n\n  /**\n   * @type {number}\n   */\n  axisCursorPositionX = 0;\n\n  /**\n   * @type {number}\n   */\n  axisCursorPointIndex = 0;\n\n  /**\n   * @type {ChartAxisY}\n   * @private\n   */\n  yAxisView = null;\n\n  /**\n   * @type {ChartAxisY2}\n   * @private\n   */\n  yAxisView2 = null;\n\n  /**\n   * @type {ChartAxisX}\n   * @private\n   */\n  xAxisView = null;\n\n  /**\n   * @type {boolean}\n   */\n  redrawChartNeeded = true;\n\n  /**\n   * @type {boolean}\n   */\n  isLineChart = false;\n\n  /**\n   * @type {boolean}\n   */\n  isBarChart = false;\n\n  /**\n   * @type {boolean}\n   */\n  isYScaled = false;\n\n  /**\n   * @type {boolean}\n   */\n  isPercentage = false;\n\n  /**\n   * @type {boolean}\n   */\n  isStacked = false;\n\n  /**\n   * @type {Array<number>}\n   */\n  stackedSumTree = [];\n\n  /**\n   * @type {Array<number>}\n   */\n  areaAdditionalSums = [];\n\n  /**\n   * @type {boolean}\n   */\n  areaAdditionalSumsNeeded = false;\n\n  /**\n   * @param {Telechart2} context\n   * @param {Object} options\n   */\n  constructor (context, options = {}) {\n    super();\n\n    this.telechart = context;\n    this.options = options;\n  }\n\n  initialize () {\n    this.createSeries();\n\n    if (this.isMainChart && this.isStacked) {\n      this.initializeStackedSumTree();\n    }\n\n    this.addEvents();\n\n    this.setInitialRange();\n    this.approximateViewportPoints();\n\n    if (this.isMainChart) {\n      this.initializeAxisY();\n      this.initializeAxisX();\n    }\n\n    if (this.isPercentage) {\n      this.areaAdditionalSums = Array( this.xAxis.length ).fill(0);\n    }\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    let redrawChart = false;\n    let redrawAxis = false;\n    let addAreaSums = false;\n\n    const minMaxYAnimation = this.minMaxYAnimation;\n    let extremesUpdated = false;\n\n    if (minMaxYAnimation && minMaxYAnimation.isRunning) {\n      this.minMaxYAnimation.update( deltaTime );\n\n      extremesUpdated = true;\n      redrawChart = true;\n      redrawAxis = true;\n    }\n\n    // 2 y axes\n    const minMaxYAnimation2 = this.minMaxYAnimation2;\n\n    if (minMaxYAnimation2 && minMaxYAnimation2.isRunning) {\n      this.minMaxYAnimation2.update( deltaTime );\n\n      extremesUpdated = true;\n      redrawChart = true;\n      redrawAxis = true;\n    }\n\n    const hasRangeAnimation = this._rangeAnimation && this._rangeAnimation.isRunning;\n\n    if (this._viewportRangeUpdateNeeded || hasRangeAnimation) {\n      if (hasRangeAnimation) {\n        this._rangeAnimation.update( deltaTime );\n\n        this.updateViewportRange([\n          this._rangeAnimationObject.from,\n          this._rangeAnimationObject.to\n        ], { skipExtremes: false });\n\n      } else {\n        this.updateViewportRange();\n      }\n\n      this._viewportRangeUpdateNeeded = false;\n      redrawChart = true;\n      redrawAxis = true;\n    }\n\n    if (this._viewportPointsGroupingNeeded) {\n      this.approximateViewportPoints();\n\n      this._viewportPointsGroupingNeeded = false;\n    }\n\n    if (extremesUpdated) {\n      this.updateViewportPixel();\n    }\n\n    this.eachSeries(line => {\n      const hasOpacityAnimation = line.isHiding || line.isShowing;\n\n      if (extremesUpdated || hasOpacityAnimation) {\n        line.requestPathUpdate();\n        redrawChart = true;\n        addAreaSums = true;\n\n        if (this.isYScaled) {\n          redrawAxis = true;\n        }\n      }\n\n      line.update( deltaTime );\n    });\n\n    if (this.yAxisView) {\n      if (redrawAxis) {\n        this.yAxisView.requestRedraw();\n      }\n\n      this.yAxisView.update( deltaTime );\n    }\n\n    if (this.yAxisView2) {\n      if (redrawAxis) {\n        this.yAxisView2.requestRedraw();\n      }\n\n      this.yAxisView2.update( deltaTime );\n    }\n\n    if (this.xAxisView) {\n      if (redrawAxis) {\n        this.xAxisView.requestRedraw();\n      }\n\n      this.xAxisView.update( deltaTime );\n    }\n\n    this.redrawChartNeeded = this.redrawChartNeeded || redrawChart;\n\n    if (this.isPercentage) {\n      if (addAreaSums) {\n        this.rebuildAdditionalAreaSums();\n      } else {\n        this.areaAdditionalSumsNeeded = false;\n      }\n    }\n  }\n\n  render () {\n    if (this.redrawChartNeeded || this.telechart.forceRedraw) {\n      this.redrawChart();\n\n      this.redrawChartNeeded = false;\n    }\n\n    let renderYAxis = this.telechart.forceRedraw;\n\n    if (this.yAxisView) {\n      if (this.yAxisView.redrawNeeded) {\n        renderYAxis = true;\n      }\n    }\n\n    if (this.yAxisView2) {\n      if (this.yAxisView2.redrawNeeded) {\n        renderYAxis = true;\n      }\n    }\n\n    if (renderYAxis) {\n      if (this.yAxisView) {\n        // clear rect inside\n        this.yAxisView.requestRedraw();\n        this.yAxisView.render();\n      }\n\n      if (this.yAxisView2) {\n        this.yAxisView2.requestRedraw();\n        this.yAxisView2.render();\n      }\n    }\n\n    if (this.xAxisView) {\n      this.xAxisView.render();\n    }\n  }\n\n  /**\n   * @abstract\n   */\n  redrawChart () {\n  }\n\n  /**\n   * Creates array of series\n   */\n  createSeries () {\n    const {\n      series: data,\n      seriesOptions: options = {}\n    } = this.options || {};\n\n    const groupingOptions = options.grouping;\n    if (groupingOptions) {\n      if (groupingOptions.pixels) {\n        this._groupingPixels = ensureNumber( groupingOptions.pixels );\n      }\n    }\n\n    const {\n      columns,\n      types,\n      colors,\n      names,\n      y_scaled = false,\n      percentage = false,\n      stacked = false\n    } = data;\n\n    this.isYScaled = y_scaled;\n    this.isPercentage = percentage;\n    this.isStacked = stacked;\n\n    if (!this.isStacked && !this.isPercentage) {\n      this.isLineChart = true;\n    }\n\n    const xAxisIndex = columns.findIndex(column => {\n      return types[ column[ 0 ] ] === SeriesTypes.x;\n    });\n    const xAxis = this.xAxis = columns[ xAxisIndex ].slice( 1 );\n\n    let yAxes = columns.slice(); // copy an array to change later\n    yAxes.splice( xAxisIndex, 1 ); // remove x axis from the array\n\n    for (let i = 0; i < yAxes.length; ++i) {\n      const yAxis = yAxes[ i ].slice();\n      const label = yAxis.shift();\n      const type = types[ label ];\n      const color = colors[ label ];\n      const name = names[ label ];\n\n      if (type === 'bar') {\n        this.isLineChart = false;\n        this.isBarChart = true;\n      }\n\n      // prepare series settings\n      const settings = {\n        xAxis, yAxis, label, type,\n        color, name, options: this.extendSeriesOptions( options )\n      };\n\n      const SeriesClass = SeriesTypeMapping[ type ] || Series;\n\n      // create instance\n      const series = new SeriesClass( this, settings, i );\n      series.initialize();\n\n      this.series.push( series );\n    }\n  }\n\n  initializeStackedSumTree () {\n    const maxN = 2 ** this.series.length;\n    const lines = this.series;\n    const xAxis = this.xAxis;\n    const chunkSize = xAxis.length;\n    const yAxes = lines.map( line => line.yAxis );\n    const sumTree = [];\n    let k = 0;\n\n    for (let currentN = 0; currentN < maxN; ++currentN) {\n      for (let columnIndex = 0; columnIndex < chunkSize; ++columnIndex) {\n        let columnSum = 0;\n\n        if (currentN) {\n          for (let bit = 0; bit < yAxes.length; ++bit) {\n            if (currentN & ( 1 << bit )) {\n              columnSum += yAxes[ bit ][ columnIndex ];\n            }\n          }\n        }\n\n        sumTree[ k++ ] = columnSum;\n      }\n    }\n\n    this.stackedSumTree = sumTree;\n  }\n\n  rebuildAdditionalAreaSums () {\n    const lines = this.series.filter( line => !!line.opacityAnimation );\n\n    if (!lines.length) {\n      return ( this.areaAdditionalSumsNeeded = false );\n    }\n\n    const [ startIndex, endIndex ] = this._viewportPointsIndexes;\n    const stepIndex = this.viewportPointsStep;\n\n    for (let columnIndex = startIndex; columnIndex <= endIndex; columnIndex += stepIndex) {\n      let addSum = 0;\n\n      for (let lineIndex = 0; lineIndex < lines.length; ++lineIndex) {\n        const line = lines[ lineIndex ];\n        if (line.opacityAnimationType === OpacityAnimationType.hiding) {\n          addSum += line.opacity * line.yAxis[ columnIndex ];\n        } else {\n          addSum -= line.yAxis[ columnIndex ] - line.opacity * line.yAxis[ columnIndex ];\n        }\n      }\n\n      this.areaAdditionalSums[ columnIndex ] = addSum;\n    }\n\n    this.areaAdditionalSumsNeeded = true;\n  }\n\n  /**\n   * Creates y axis\n   */\n  initializeAxisY () {\n    const yAxisView = new ChartAxisY( this, this.isYScaled );\n    yAxisView.initialize();\n\n    this.yAxisView = yAxisView;\n\n    if (this.isYScaled) {\n      const yAxisView2 = new ChartAxisY2( this, this.isYScaled );\n      yAxisView2.initialize();\n\n      this.yAxisView2 = yAxisView2;\n    }\n  }\n\n  /**\n   * Creates y axis\n   */\n  initializeAxisX () {\n    const xAxisView = new ChartAxisX( this );\n    xAxisView.initialize();\n\n    this.xAxisView = xAxisView;\n  }\n\n  /**\n   * Sets initial viewport range for the chart\n   */\n  setInitialRange () {\n    this.setViewportRange();\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @param {*} options\n   */\n  animateViewportRangeTo (minX = -Infinity, maxX = Infinity, options = {}) {\n    const {\n      duration = 300,\n      timingFunction = 'easeInOutQuad',\n      preservePadding = false\n    } = options;\n\n    const [ newMinX, newMaxX ] = this._clampViewportRange( minX, maxX, preservePadding );\n\n    if (this._rangeAnimation) {\n      return this._rangeAnimation.patchAnimation( [ newMinX, newMaxX ] );\n    }\n\n    this._rangeAnimationObject = {\n      from: this._viewportRange[ 0 ],\n      to: this._viewportRange[ 1 ]\n    };\n\n    this._rangeAnimation = new Tween(this._rangeAnimationObject, [ 'from', 'to' ], [\n      newMinX, newMaxX\n    ], {\n      duration, timingFunction\n    });\n\n    const onFinished = _ => {\n      this._rangeAnimation = null;\n    };\n\n    this._rangeAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._rangeAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._rangeAnimation.start();\n  }\n\n  /**\n   * @param {number|Date} minX\n   * @param {number|Date} maxX\n   * @param {boolean} skipExtremes\n   * @param {boolean} preservePadding\n   */\n  setViewportRange (minX = -Infinity, maxX = Infinity, { skipExtremes = false, preservePadding = false } = {}) {\n    const oldDistance = this._viewportDistance;\n\n    // recompute X boundaries\n    this._setViewportRange( minX, maxX, preservePadding );\n\n    // detect if viewport distance is changed\n    const distanceChanged = Math.abs( oldDistance - this._viewportDistance ) > 1e-2;\n\n    // remember last indexes\n    const oldRangeIndexes = this._viewportRangeIndexes;\n\n    // recompute indexes range\n    this._updateViewportIndexes();\n\n    let localExtremesUpdateRequested = false;\n\n    if (!arraysEqual( this._viewportRangeIndexes, oldRangeIndexes )) {\n      // do not recompute groups while first render\n      if (oldRangeIndexes.length > 0) {\n        // recompute approximation in next animation update\n        this._viewportPointsGroupingNeeded = true;\n      }\n\n      localExtremesUpdateRequested = true;\n    }\n\n    const updateExtremes = !skipExtremes && localExtremesUpdateRequested;\n\n    this.eachSeries(line => {\n      // update local extremes only if indexes range changed\n      if (updateExtremes && !this.isStacked) {\n        // update minY and maxY local values for each line\n        line.updateLocalExtremes();\n      }\n\n      // recompute and repaint path in next animation update\n      line.requestPathUpdate();\n    });\n\n    if (updateExtremes) {\n      // update local extremes on chart level\n      this.updateLocalExtremes();\n\n      if (this.isYScaled) {\n        this.updateLocalExtremes2();\n      }\n    }\n\n    // recompute pixel values\n    this.updateViewportPixel();\n\n    if (this.xAxisView) {\n      // update x axis animations only if distance has changed\n      this.xAxisView.requestUpdateAnimations( !distanceChanged );\n      this.xAxisView.requestRedraw();\n    }\n\n    this.emit( ChartEvents.REDRAW_CURSOR );\n\n    if (this.isMainChart && this._cursorShowing) {\n      this._setInsideChartState( false, true );\n    }\n  }\n\n  /**\n   * Recompute key variables for viewport range\n   *\n   * @param {Array<number>} viewportRange\n   * @param {*} options\n   */\n  updateViewportRange (viewportRange = this._viewportRange, options = {}) {\n    const {\n      skipExtremes = true,\n      preservePadding = true\n    } = options;\n\n    // recompute X boundaries\n    this.setViewportRange(\n      viewportRange[ 0 ],\n      viewportRange[ 1 ], {\n        skipExtremes,\n        preservePadding\n      }\n    );\n  }\n\n  /**\n   * Approximate points for better performance\n   */\n  approximateViewportPoints () {\n    let [ startIndex, endIndex ] = this._viewportRangeIndexes;\n\n    startIndex = Math.max( 0, startIndex - 1 );\n    endIndex = Math.min( this.xAxis.length - 1, endIndex + 1 );\n\n    // if we have no enough points\n    // then we don't need to approximate\n    if (endIndex - startIndex < 100 && !this.isNavigatorChart) {\n      // just save indexes of points for increase performance\n      // [ startIndex, endIndex ]\n      this._viewportPointsIndexes[ 0 ] = startIndex;\n      this._viewportPointsIndexes[ 1 ] = endIndex;\n      this.viewportPointsStep = 1;\n\n      // all work done here\n      return;\n    }\n\n    const boostLimit = 300;\n    const boostScale = 1 + this.xAxis.length > boostLimit\n      ? Math.max(0, ( endIndex - startIndex ) / this.xAxis.length )\n      : 1;\n\n    let groupingDistanceLimitX = boostScale * this._groupingPixels * this.viewportPixelX;\n\n    let groupStartIndex = startIndex;\n\n    let step = 1;\n\n    for (let i = startIndex + 1; i <= endIndex; ++i) {\n      const pointX = this.xAxis[ i ];\n\n      const groupStartDifferenceX = pointX - this.xAxis[ groupStartIndex ];\n\n      if (groupStartDifferenceX >= groupingDistanceLimitX || i === endIndex) {\n        if (groupStartIndex !== i - 1) {\n          // we have 2 or more points to group\n          // [ startIndex, lastIndex ] all indexes inclusive\n          const endIndex = i - 1;\n          if (step === 1) {\n            step = endIndex - groupStartIndex;\n            break;\n          }\n        }\n      }\n    }\n\n    step = 2 ** Math.floor( Math.log2( step ) );\n\n    while (startIndex % step !== 0) {\n      startIndex--;\n    }\n\n    while (endIndex % step !== 0) {\n      endIndex++;\n    }\n\n    endIndex = Math.min( endIndex, this.xAxis.length - 1 );\n\n    this._viewportPointsIndexes[ 0 ] = startIndex;\n    this._viewportPointsIndexes[ 1 ] = endIndex;\n    this.viewportPointsStep = step;\n  }\n\n  /**\n   * Find new local min and max extremes among visible series\n   */\n  updateLocalExtremes () {\n    const isLineChart = this.isLineChart;\n    const isYScaled = this.isYScaled;\n    const isStacked = this.isStacked;\n    const isPercentage = this.isPercentage;\n\n    let localMinY = isLineChart ? Infinity : 0;\n    let localMaxY = 0;\n\n    if (isYScaled) {\n      const line = this.series[ 0 ];\n      if (!line.isVisible) {\n        // find among visible series\n        return;\n      }\n\n      if (localMinY > line.localMinY) {\n        localMinY = line.localMinY;\n      }\n      if (localMaxY < line.localMaxY) {\n        localMaxY = line.localMaxY;\n      }\n    } else if (isStacked && !isPercentage) {\n      const chunkOffset = this.computeSumTreeChunkOffset();\n      const [ minIndex, maxIndex ] = this._viewportRangeIndexes;\n      localMaxY = arrayMax( this.stackedSumTree, chunkOffset + minIndex, chunkOffset + maxIndex );\n    } else if (isPercentage) {\n      localMaxY = 105;\n    } else {\n      this.eachSeries(line => {\n        if (!line.isVisible) {\n          // find among visible series\n          return;\n        }\n\n        if (localMinY > line.localMinY) {\n          localMinY = line.localMinY;\n        }\n        if (localMaxY < line.localMaxY) {\n          localMaxY = line.localMaxY;\n        }\n      });\n    }\n\n    let oldLocalMinY = this.localMinY;\n    let oldLocalMaxY = this.localMaxY;\n\n    this.localMinY = localMinY;\n    this.localMaxY = localMaxY;\n\n    let updateAnimation = false;\n\n    if (typeof this.currentLocalMinY !== 'number') {\n      // set initial local min y\n      this.currentLocalMinY = this.localMinY;\n    } else if (this.localMinY !== oldLocalMinY) {\n      updateAnimation = true;\n    }\n\n    if (typeof this.currentLocalMaxY !== 'number') {\n      // set initial local max y\n      this.currentLocalMaxY = this.localMaxY;\n    } else if (this.localMaxY !== oldLocalMaxY) {\n      updateAnimation = true;\n    }\n\n    if (updateAnimation) {\n      this._updateOrCreateMinMaxYAnimation();\n\n      if (this.yAxisView) {\n        this.yAxisView.requestUpdateAnimations();\n      }\n\n      if (this.yAxisView2) {\n        this.yAxisView2.requestUpdateAnimations();\n      }\n    }\n  }\n\n  updateLocalExtremes2 () {\n    const isLineChart = this.isLineChart;\n\n    let localMinY2 = isLineChart ? Infinity : 0;\n    let localMaxY2 = 0;\n\n    const line = this.series[ 1 ];\n    if (!line || !line.isVisible) {\n      // find among visible series\n      return;\n    }\n\n    if (localMinY2 > line.localMinY) {\n      localMinY2 = line.localMinY;\n    }\n    if (localMaxY2 < line.localMaxY) {\n      localMaxY2 = line.localMaxY;\n    }\n\n    let oldLocalMinY2 = this.localMinY2;\n    let oldLocalMaxY2 = this.localMaxY2;\n\n    this.localMinY2 = localMinY2;\n    this.localMaxY2 = localMaxY2;\n\n    let updateAnimation = false;\n\n    if (typeof this.currentLocalMinY2 !== 'number') {\n      // set initial local min y\n      this.currentLocalMinY2 = this.localMinY2;\n    } else if (this.localMinY2 !== oldLocalMinY2) {\n      updateAnimation = true;\n    }\n\n    if (typeof this.currentLocalMaxY2 !== 'number') {\n      // set initial local max y\n      this.currentLocalMaxY2 = this.localMaxY2;\n    } else if (this.localMaxY2 !== oldLocalMaxY2) {\n      updateAnimation = true;\n    }\n\n    if (updateAnimation) {\n      this._updateOrCreateMinMaxYAnimation2();\n\n      if (this.yAxisView) {\n        this.yAxisView.requestUpdateAnimations();\n      }\n\n      if (this.yAxisView2) {\n        this.yAxisView2.requestUpdateAnimations();\n      }\n    }\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @return {number}\n   */\n  computeViewportPixelX (minX = this._viewportRange[ 0 ], maxX = this._viewportRange[ 1 ]) {\n    return ( maxX - minX ) / this.chartWidth;\n  }\n\n  /**\n   * @param minY\n   * @param maxY\n   * @return {number}\n   */\n  computeViewportPixelY (minY = this.currentLocalMinY, maxY = this.currentLocalMaxY) {\n    return ( maxY - minY ) / this.chartHeight;\n  }\n\n  /**\n   * @param minY\n   * @param maxY\n   * @return {number}\n   */\n  computeViewportPixelY2 (minY = this.currentLocalMinY2, maxY = this.currentLocalMaxY2) {\n    return ( maxY - minY ) / this.chartHeight;\n  }\n\n  /**\n   * Updates pixel value for each axis\n   */\n  updateViewportPixel () {\n    this.viewportPixelX = this._viewportDistance / this.chartWidth;\n    this.viewportPixelY = this.computeViewportPixelY();\n\n    if (this.isYScaled) {\n      this.viewportPixelY2 = this.computeViewportPixelY2();\n    }\n  }\n\n  /**\n   * @param {number} localMinX\n   * @param {number} localMaxX\n   * @return {number}\n   */\n  computeViewportPadding (localMinX, localMaxX) {\n    return this.computeViewportPixelX( localMinX, localMaxX ) * this._viewportPadding;\n  }\n\n  /**\n   * Initialize chart events\n   */\n  addEvents () {\n    this.telechart.on('resize', _=> {\n      this.onResize();\n    });\n\n    this.eachSeries(line => {\n      line.on('visibleChange', _ => {\n        this.onSeriesVisibleChange( line );\n      });\n    });\n  }\n\n  onResize () {\n    // making requests for future animation update\n    this._viewportRangeUpdateNeeded = true;\n    this._viewportPointsGroupingNeeded = true;\n\n    if (this.yAxisView) {\n      this.yAxisView.onChartResize();\n    }\n\n    if (this.yAxisView2) {\n      this.yAxisView2.onChartResize();\n    }\n\n    if (this.xAxisView) {\n      this.xAxisView.onChartResize();\n    }\n\n    this.redrawChartNeeded = true;\n    this.redrawChart();\n\n    this.emit( ChartEvents.REDRAW_CURSOR );\n  }\n\n  /**\n   * @param {Series} line\n   */\n  onSeriesVisibleChange (line) {\n    // find new extremes and scale\n    this.updateLocalExtremes();\n\n    if (this.isYScaled) {\n      this.updateLocalExtremes2();\n    }\n\n    this.emit( ChartEvents.SERIES_VISIBLE_CHANGE, line );\n  }\n\n  /**\n   * @param {string} label\n   * @return {Series}\n   */\n  getSeriesByLabel (label) {\n    return this.findSeries(line => {\n      return line.label === label;\n    });\n  }\n\n  /**\n   * @param {string} label\n   */\n  setSeriesVisible (label) {\n    const series = this.getSeriesByLabel( label );\n    if (series) {\n      series.setVisible();\n    }\n  }\n\n  /**\n   * @param {string} label\n   */\n  setSeriesInvisible (label) {\n    const series = this.getSeriesByLabel( label );\n    if (series) {\n      series.setInvisible();\n    }\n  }\n\n  /**\n   * @param {string} label\n   */\n  toggleSeries (label) {\n    const series = this.getSeriesByLabel( label );\n    if (series) {\n      series.toggleVisible();\n\n      this._setInsideChartState( false, true );\n    }\n  }\n\n  toggleAllSeriesExcept (label) {\n    const targetLine = this.getSeriesByLabel( label );\n\n    if (targetLine && !targetLine.isVisible) {\n      // console.log( 'target 0 -> 1, rest 1/0 -> 0' );\n      this.eachSeries(line => {\n        line.label === label\n          ? line.setVisible()\n          : line.setInvisible();\n      });\n    } else {\n      let isSingleVisible = true;\n\n      for (let i = 0; i < this.series.length; ++i) {\n        if (this.series[ i ].isVisible\n          && this.series[ i ].label !== label) {\n          isSingleVisible = false;\n          break;\n        }\n      }\n\n      if (isSingleVisible) {\n        // console.log( 'target 1 -> 0, rest 0 -> 1' );\n        this.eachSeries(line => {\n          line.label === label\n            ? line.setInvisible()\n            : line.setVisible();\n        });\n      } else {\n        // console.log( 'target 1 -> 1, rest 1/0 -> 0' );\n        this.eachSeries(line => {\n          if (line.label !== label) {\n            line.setInvisible();\n          }\n        });\n      }\n    }\n\n    this.emit( ChartEvents.FORCE_BUTTONS_UPDATE );\n\n    this._setInsideChartState( false, true );\n  }\n\n  /**\n   * @param {Function} predicate\n   * @return {Series}\n   */\n  findSeries (predicate) {\n    for (let i = 0; i < this.series.length; ++i) {\n      if (predicate( this.series[ i ] )) {\n        return this.series[ i ];\n      }\n    }\n  }\n\n  /**\n   * @param {Function} fn\n   */\n  eachSeries (fn = () => {}) {\n    for (let i = 0; i < this.series.length; ++i) {\n      fn( this.series[ i ], i );\n    }\n  }\n\n  /**\n   * @param {Object} options\n   * @return {*}\n   */\n  extendSeriesOptions (options) {\n    return options;\n  }\n\n  /**\n   * @param {string} type\n   */\n  setChartType (type) {\n    this._type = type;\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   */\n  projectXToCanvas (x) {\n    return this.toRelativeX( x ) / this.viewportPixelX;\n  }\n\n  /**\n   * @param {number} y\n   * @return {number}\n   */\n  projectYToCanvas (y) {\n    const canvasY = this.seriesOffsetTop + this.chartHeight - ( y - this.currentLocalMinY ) / this.viewportPixelY;\n    return clampNumber( canvasY || 0, -1e6, 1e6 );\n  }\n\n  /**\n   * @param {number} y\n   * @return {number}\n   */\n  projectYToCanvas2 (y) {\n    const canvasY = this.seriesOffsetTop + this.chartHeight - ( y - this.currentLocalMinY2 ) / this.viewportPixelY2;\n    return clampNumber( canvasY || 0, -1e6, 1e6 );\n  }\n\n  /**\n   * @param {number} pageX\n   * @param {number} pageY\n   * @return {number}\n   */\n  projectCursorToX ({ pageX = 0, pageY = 0 }) {\n    const { left } = this.telechart.canvasOffset;\n    const chartLeft = pageX - left;\n\n    return this.viewportRange[ 0 ] + chartLeft * this.viewportPixelX;\n  }\n\n  /**\n   * @return {number}\n   */\n  computeSumTreeN () {\n    let bits = 0;\n    for (let i = 0; i < this.series.length; ++i) {\n      if (this.series[i].isVisible) {\n        bits |= 1 << i;\n      }\n    }\n    return bits;\n  }\n\n  /**\n   * @return {number}\n   */\n  computeSumTreeChunkOffset () {\n    return this.xAxis.length * this.computeSumTreeN();\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   * @private\n   */\n  toRelativeX (x) {\n    return x - this._viewportRange[ 0 ];\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {string}\n   */\n  get chartType () {\n    return this._type;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isMainChart () {\n    return this._type === ChartTypes.chart;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isNavigatorChart () {\n    return this._type === ChartTypes.navigatorChart;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRange () {\n    return this._viewportRange;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRangeIndexes () {\n    return this._viewportRangeIndexes;\n  }\n\n  /**\n   * @return {number}\n   */\n  get viewportPadding () {\n    return this._viewportPadding;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localExtremeDifference () {\n    return this.localMaxY - this.localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localExtremeDifference2 () {\n    return this.localMaxY2 - this.localMinY2;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalExtremeDifference () {\n    return this._globalMaxY - this._globalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalExtremeDifference () {\n    return this.currentLocalMaxY - this.currentLocalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalExtremeDifference2 () {\n    return this.currentLocalMaxY2 - this.currentLocalMinY2;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMinY () {\n    return this._globalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMaxY () {\n    return this._globalMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartWidth () {\n    return this.telechart.canvasWidth;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return ChartVariables.mainChartHeight;\n  }\n\n  /**\n   * @return {number}\n   */\n  get seriesOffsetTop () {\n    return ChartVariables.mainChartOffsetTop;\n  }\n\n  /**\n   * @return {number}\n   */\n  get seriesOffsetBottom () {\n    return ChartVariables.mainChartOffsetBottom;\n  }\n\n  /**\n   * @private\n   */\n  _updateViewportIndexes () {\n    const [ rangeStart, rangeEnd ] = this._viewportRange;\n    const [ minLowerIndex, minUpperIndex ] = binarySearchIndexes( this.xAxis, rangeStart );\n    const [ maxLowerIndex, maxUpperIndex ] = binarySearchIndexes( this.xAxis, rangeEnd );\n\n    this._viewportRangeIndexes = [ minUpperIndex, maxLowerIndex ];\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @param {boolean} preservePadding\n   * @private\n   */\n  _setViewportRange (minX, maxX, preservePadding = false) {\n    const [ newMinX, newMaxX ] = this._clampViewportRange( minX, maxX, preservePadding );\n\n    this._viewportRange = [ newMinX, newMaxX ];\n    this._viewportDistance = newMaxX - newMinX;\n  }\n\n  /**\n   * @param {number | Date} minX\n   * @param {number | Date} maxX\n   * @param {boolean} preservePadding\n   * @private\n   */\n  _clampViewportRange (minX, maxX, preservePadding = false) {\n    const xAxis = this.xAxis;\n\n    const globalMinX = xAxis[ 0 ];\n    const globalMaxX = xAxis[ xAxis.length - 1 ];\n\n    if (isDate( minX )) {\n      minX = minX.getTime();\n    }\n    if (isDate( maxX )) {\n      maxX = maxX.getTime();\n    }\n\n    if (minX > maxX) {\n      [ minX, maxX ] = [ maxX, minX ];\n    }\n\n    let newMinX = clampNumber( minX, globalMinX, globalMaxX );\n    let newMaxX = clampNumber( maxX, globalMinX, globalMaxX );\n\n    const actualPaddingX = this.computeViewportPadding( newMinX, newMaxX );\n\n    const receivedLeftPaddingX = clampNumber( newMinX - minX, 0, actualPaddingX );\n    const receivedRightPaddingX = clampNumber( maxX - newMaxX, 0, actualPaddingX );\n\n    if (!preservePadding) {\n      this._viewportLeftPaddingScale = receivedLeftPaddingX / actualPaddingX;\n    }\n    if (this._viewportLeftPaddingScale > 0) {\n      newMinX -= actualPaddingX * this._viewportLeftPaddingScale;\n    }\n\n    if (!preservePadding) {\n      this._viewportRightPaddingScale = receivedRightPaddingX / actualPaddingX;\n    }\n    if (this._viewportRightPaddingScale > 0) {\n      newMaxX += actualPaddingX * this._viewportRightPaddingScale;\n    }\n\n    return [ newMinX, newMaxX ];\n  }\n\n  /**\n   * @private\n   */\n  _updateOrCreateMinMaxYAnimation () {\n    if (!this.minMaxYAnimation) {\n      return this._createMinMaxYAnimation();\n    }\n\n    const currentLocalExtremeDifference = this.currentLocalExtremeDifference;\n    const newLocalExtremeDifference = this.localExtremeDifference;\n    const animationSign = currentLocalExtremeDifference < newLocalExtremeDifference;\n\n    if (animationSign !== this.minMaxYAnimationSign) {\n      return this._createMinMaxYAnimation();\n    }\n\n    this._patchMinMaxYAnimation();\n  }\n\n  /**\n   * @private\n   */\n  _updateOrCreateMinMaxYAnimation2 () {\n    if (!this.minMaxYAnimation2) {\n      return this._createMinMaxYAnimation2();\n    }\n\n    const currentLocalExtremeDifference = this.currentLocalExtremeDifference2;\n    const newLocalExtremeDifference = this.localExtremeDifference2;\n    const animationSign = currentLocalExtremeDifference < newLocalExtremeDifference;\n\n    if (animationSign !== this.minMaxYAnimationSign2) {\n      return this._createMinMaxYAnimation2();\n    }\n\n    this._patchMinMaxYAnimation2();\n  }\n\n  /**\n   * @private\n   */\n  _createMinMaxYAnimation () {\n    if (this.minMaxYAnimation) {\n      this.minMaxYAnimation.cancel();\n    }\n\n    this._updateMinMaxAnimationSign();\n\n    this.minMaxYAnimation = new Tween(this, [\n      'currentLocalMinY',\n      'currentLocalMaxY'\n    ], [\n      this.localMinY,\n      this.localMaxY\n    ], {\n      duration: 300,\n      timingFunction: 'easeInOutQuad'\n    });\n\n    const onFinished = _ => {\n      this.minMaxYAnimation = null;\n    };\n\n    this.minMaxYAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this.minMaxYAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this.minMaxYAnimation.start();\n  }\n\n  /**\n   * @private\n   */\n  _createMinMaxYAnimation2 () {\n    if (this.minMaxYAnimation2) {\n      this.minMaxYAnimation2.cancel();\n    }\n\n    this._updateMinMaxAnimationSign2();\n\n    this.minMaxYAnimation2 = new Tween(this, [\n      'currentLocalMinY2',\n      'currentLocalMaxY2'\n    ], [\n      this.localMinY2,\n      this.localMaxY2\n    ], {\n      duration: 300,\n      timingFunction: 'easeInOutQuad'\n    });\n\n    const onFinished = _ => {\n      this.minMaxYAnimation2 = null;\n    };\n\n    this.minMaxYAnimation2.on( TweenEvents.COMPLETE, onFinished );\n    this.minMaxYAnimation2.on( TweenEvents.CANCELLED, onFinished );\n\n    this.minMaxYAnimation2.start();\n  }\n\n  /**\n   * @private\n   */\n  _patchMinMaxYAnimation () {\n    this.minMaxYAnimation.patchAnimation([\n      this.localMinY,\n      this.localMaxY\n    ]);\n  }\n\n  /**\n   * @private\n   */\n  _patchMinMaxYAnimation2 () {\n    this.minMaxYAnimation2.patchAnimation([\n      this.localMinY2,\n      this.localMaxY2\n    ]);\n  }\n\n  /**\n   * @private\n   */\n  _updateMinMaxAnimationSign () {\n    this.minMaxYAnimationSign = this.currentLocalExtremeDifference < this.localExtremeDifference;\n  }\n\n  /**\n   * @private\n   */\n  _updateMinMaxAnimationSign2 () {\n    this.minMaxYAnimationSign2 = this.currentLocalExtremeDifference2 < this.localExtremeDifference2;\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { warp } from '../../utils';\n\nlet TRANSITION_ID = 1;\n\nexport const TransitionEvents = {\n  STARTED: 'started',\n  PAUSED: 'paused',\n  FINISHED: 'paused',\n};\n\nexport const TransitionState = {\n  NOT_STARTED: 0x1,\n  RUNNING: 0x2,\n  PAUSED: 0x4,\n  FINISHED: 0x6,\n};\n\nexport class TransitionPlayback extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = TRANSITION_ID++;\n\n  /**\n   * Uses to set time direction and scale\n   * Default is 1 - default velocity\n   *\n   * @type {number}\n   * @private\n   */\n  _timeScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _state = TransitionState.NOT_STARTED;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _velocity = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _acceleration = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _fromPosition = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _toPosition = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentPosition = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _startPosition = 0;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _options = {};\n\n  /**\n   * @param {number} from\n   * @param {number} to\n   * @param {*} options\n   */\n  constructor (from, to, options = {}) {\n    super();\n\n    this._fromPosition = from;\n    this._toPosition = to;\n\n    this._initOptions( options );\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (!this.isRunning) {\n      return;\n    }\n    this._updateVelocity( deltaTime );\n    this._updateCurrentPosition( deltaTime );\n  }\n\n  /**\n   * Play transition\n   */\n  start () {\n    if (this.isRunning) {\n      return;\n    }\n\n    this._state = TransitionState.RUNNING;\n    this._startPosition = this._fromPosition;\n    this._currentPosition = this._startPosition;\n\n    this.emit( TransitionEvents.STARTED );\n  }\n\n  /**\n   * Pause transition\n   */\n  pause () {\n    this._state = TransitionState.PAUSED;\n    this.emit( TransitionEvents.PAUSED );\n  }\n\n  /**\n   * Finish transition\n   */\n  finish () {\n    this._state = TransitionState.FINISHED;\n    this.emit( TransitionEvents.FINISHED );\n    this._dispose();\n  }\n\n  /**\n   * Reset transition\n   */\n  reset () {\n    this._state = TransitionState.NOT_STARTED;\n    this._initOptions( this._options );\n    this._currentPosition = this._fromPosition;\n    this._startPosition = this._fromPosition;\n  }\n\n  /**\n   * @param {number} to\n   */\n  setToPosition (to) {\n    this._toPosition = to;\n  }\n\n  /**\n   * @param {number} a\n   */\n  setAcceleration (a) {\n    this._acceleration = a;\n  }\n\n  /**\n   * @param {number} timeScale\n   */\n  setTimeScale (timeScale) {\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @param {number} velocity\n   */\n  setVelocity (velocity) {\n    this._velocity = velocity;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get velocity () {\n    return this._velocity;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return this._state === TransitionState.RUNNING;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._state === TransitionState.PAUSED;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isFinished () {\n    return this._state === TransitionState.FINISHED;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get fromPosition () {\n    return this._fromPosition;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get toPosition () {\n    return this._toPosition;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get startPosition () {\n    return this._startPosition;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get currentPosition () {\n    return this._currentPosition;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get distanceToDestination () {\n    return Math.abs( this._toPosition - this._currentPosition );\n  }\n\n  /**\n   * @param {*} options\n   * @private\n   */\n  _initOptions (options) {\n    this._options = options;\n\n    let {\n      timeScale = 1,\n      velocity = 1,\n      maxVelocity = 1,\n      acceleration = 0\n    } = options;\n\n    this._timeScale = timeScale;\n    this._velocity = velocity;\n    this._maxVelocity = maxVelocity;\n    this._acceleration = acceleration;\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _updateCurrentPosition (deltaTime) {\n    if (this._toPosition === null) {\n      return this.dispose();\n    }\n\n    const sign = Math.sign( this._toPosition - this._currentPosition );\n    this._currentPosition += sign * this._computeDeltaDistance( deltaTime );\n\n    if (this.distanceToDestination < .1) {\n      this.finish();\n    }\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @returns {number}\n   * @private\n   */\n  _updateVelocity (deltaTime) {\n    if (this._acceleration) {\n      this._velocity = Math.min(\n        this._maxVelocity,\n        this._velocity + warp( this._acceleration, deltaTime )\n      );\n    }\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @returns {number}\n   * @private\n   */\n  _computeDeltaDistance (deltaTime) {\n    const deltaDistance = this._timeScale * (\n      this._velocity * deltaTime\n      + this._acceleration * deltaTime * deltaTime * .5\n    );\n\n    return Math.min( deltaDistance, this.distanceToDestination );\n  }\n\n  /**\n   * Destroys the transition\n   */\n  _dispose () {\n    this._fromPosition = null;\n    this._toPosition = null;\n    this._currentPosition = null;\n    this._startPosition = null;\n    this._options = null;\n\n    this.removeAllListeners();\n  }\n}\n","export const TelechartWorkerEvents = {\n  SETUP: 'init',\n  UPDATE_ENVIRONMENT: 'updateEnvironment',\n  SET_THEME: 'setTheme',\n  SET_TITLE: 'setTitle',\n  INITIALIZE_BUTTONS: 'initializeButtons',\n  UPDATE_BUTTONS: 'updateButtons',\n  TOGGLE_SERIES: 'toggleSeries',\n\n  // data label\n  UPDATE_DATA_LABEL: 'updateDataLabel',\n  SET_DATA_LABEL_VISIBILITY: 'setDataLabelVisibility',\n\n  // navigation\n  SET_NAVIGATION_RANGE: 'setNavigationRange',\n\n  // events\n  MAIN_CANVAS_EVENT: 'mainCanvasEvent',\n  NAV_UI_CANVAS_EVENT: 'navUICanvasEvent',\n};\n","import { BaseChart } from './BaseChart';\nimport { binarySearchIndexes, ChartVariables } from '../../utils';\nimport { ChartTypes } from './ChartTypes';\nimport { ChartEvents } from './events/ChartEvents';\nimport { Tween, TweenEvents } from '../animation/Tween';\nimport { TransitionEvents, TransitionPlayback } from '../animation/TransitionPlayback';\nimport { TelechartWorkerEvents } from '../worker/worker-events';\n\nconst CursorAnimationType = {\n  inactive: 0x0,\n  showing: 0x1,\n  hiding: 0x2,\n};\n\nexport class Chart extends BaseChart {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _type = ChartTypes.chart;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _firstCursorAnimation = true;\n\n  /**\n   * @type {boolean}\n   */\n  redrawCursorRequested = false;\n\n  /**\n   * @type {TransitionPlayback}\n   */\n  cursorAnimation = null;\n\n  /**\n   * @type {Tween}\n   */\n  cursorOpacityAnimation = null;\n\n  /**\n   * @type {number}\n   */\n  cursorOpacity = 0;\n\n  /**\n   * @type {string}\n   */\n  cursorAnimationType = CursorAnimationType.inactive;\n\n  initialize () {\n    super.initialize();\n\n    this.addCursorEvents();\n  }\n\n  update (deltaTime) {\n    super.update(deltaTime);\n\n    let redrawCursors = false;\n\n    if (this.hasCursorOpacityAnimation) {\n      this.cursorOpacityAnimation.update( deltaTime );\n      redrawCursors = true;\n    }\n\n    if (this.hasCursorAnimation) {\n      this.cursorAnimation.update( deltaTime );\n      redrawCursors = true;\n    }\n\n    if (this.minMaxYAnimation && this.minMaxYAnimation.isRunning) {\n      redrawCursors = true;\n    }\n\n    if (this.minMaxYAnimation2 && this.minMaxYAnimation2.isRunning) {\n      redrawCursors = true;\n    }\n\n    if (redrawCursors) {\n      this.requestRedrawCursor();\n    }\n  }\n\n  render () {\n    super.render();\n\n    this.redrawUIOverlay();\n  }\n\n  redrawChart () {\n    const context = this.telechart.mainContext;\n    context.clearRect( 0, 0, this.chartWidth, ChartVariables.mainMaxHeight );\n\n    let lastOutput = [];\n    for (let i = 0, len = this.series.length; i < len; ++i) {\n      lastOutput = this.series[ i ].render( context, lastOutput );\n    }\n  }\n\n  redrawUIOverlay () {\n    if (this.redrawCursorRequested || this.telechart.forceRedraw) {\n      this.redrawCursor();\n\n      if (this.isLineChart) {\n        this.redrawMarkers();\n      }\n\n      this.redrawCursorRequested = false;\n    }\n  }\n\n  requestRedrawCursor () {\n    this.redrawCursorRequested = true;\n  }\n\n  redrawCursor () {\n    const context = this.telechart.uiContext;\n\n    context.clearRect( 0, 0, this.chartWidth, ChartVariables.mainMaxHeight );\n\n    if (this.isBarChart) {\n      this.drawCursorBar( context );\n    } else {\n      this.drawCursorLine( context );\n    }\n  }\n\n  drawCursorLine (context) {\n    const colors = this.telechart.themeColors;\n\n    const cursorColor = colors.axisColor;\n    const cursorColorAlpha = colors.axisColorAlpha;\n\n    context.globalAlpha = cursorColorAlpha * this.cursorOpacity;\n    context.strokeStyle = cursorColor;\n    context.lineWidth = 1;\n\n    const x = this.projectXToCanvas( this.axisCursorPositionX );\n    const y1 = this.seriesOffsetTop;\n    const y2 = this.seriesOffsetTop + this.chartHeight;\n\n    context.beginPath();\n    context.moveTo( x, y1 );\n    context.lineTo( x, y2 );\n    context.stroke();\n  }\n\n  drawCursorBar (context) {\n    const colors = this.telechart.themeColors;\n\n    const maskColor = colors.maskColor;\n    const maskColorAlpha = colors.maskColorAlpha;\n\n    context.globalAlpha = maskColorAlpha * this.cursorOpacity;\n    context.fillStyle = maskColor;\n    context.lineWidth = 1;\n\n    const barWidthX = ( this.xAxis[ this.viewportPointsStep ] - this.xAxis[ 0 ] ) / this.viewportPixelX;\n    const barHalfWidthX = barWidthX * .5;\n\n    const x = this.projectXToCanvas( this.axisCursorPositionX );\n    const x1 = -1;\n    const x2 = x - barHalfWidthX + .3;\n    const x3 = x + barHalfWidthX - .3;\n    const x4 = this.chartWidth + 1;\n\n    const y1 = 0;\n    const y2 = this.seriesOffsetTop + this.chartHeight + 1;\n\n    context.fillRect( x1, y1, x2 - x1, y2 - y1 );\n    context.fillRect( x3, y1, x4 - x3, y2 - y1 );\n  }\n\n  redrawMarkers () {\n    const context = this.telechart.uiContext;\n    const colors = this.telechart.themeColors;\n    const lines = this.series;\n    const markerRadius = 3;\n\n    const fillColor = colors.color;\n\n    const currentX = this.cursorAnimation && this.cursorAnimation.currentPosition || this.axisCursorPositionX;\n\n    let [ lowerIndex, upperIndex ] = binarySearchIndexes( this.xAxis, currentX );\n    if (lowerIndex < 0) {\n      lowerIndex = 0;\n    }\n    if (upperIndex >= this.xAxis.length) {\n      upperIndex = this.xAxis.length - 1;\n    }\n\n    const lowerX = this.xAxis[ lowerIndex ];\n    const upperX = this.xAxis[ upperIndex ];\n\n    let linearInterpolation = 0;\n    if (upperX - lowerX > 0) {\n      linearInterpolation = ( currentX - lowerX ) / ( upperX - lowerX );\n    }\n\n    const canvasX = this.projectXToCanvas( currentX );\n\n    context.fillStyle = fillColor;\n    context.lineWidth = 4;\n\n    for (let i = 0; i < lines.length; ++i) {\n      const line = lines[ i ];\n      context.strokeStyle = line.color;\n      context.globalAlpha = line.opacity;\n\n      const y0 = line.yAxis[ lowerIndex ];\n      const y1 = line.yAxis[ upperIndex ];\n      const y = y0 + ( y1 - y0 ) * linearInterpolation;\n\n      let canvasY = 0;\n\n      if (this.isYScaled) {\n        canvasY = i === 0\n          ? this.projectYToCanvas( y )\n          : this.projectYToCanvas2( y );\n      } else {\n        canvasY = this.projectYToCanvas( y );\n      }\n\n      context.beginPath();\n      context.arc(canvasX, canvasY, markerRadius * line.opacity * this.cursorOpacity, 0, 2 * Math.PI);\n      context.stroke();\n      context.fill();\n    }\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   */\n  setNavigationRange (min, max) {\n    const [ minX, maxX ] = this._resolveNavigationRange( min, max );\n\n    this.setViewportRange( minX, maxX );\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   */\n  animateNavigationRangeTo (min, max) {\n    const [ minX, maxX ] = this._resolveNavigationRange( min, max );\n\n    this.animateViewportRangeTo( minX, maxX );\n  }\n\n  /**\n   * Sets initial viewport range for the chart\n   */\n  setInitialRange () {\n    const globalMinX = this.xAxis[ 0 ];\n    const globalMaxX = this.xAxis[ this.xAxis.length - 1 ];\n    const initialViewport = Math.floor( ( globalMaxX - globalMinX ) * ChartVariables.initialViewportScale );\n    const viewportPadding = this.computeViewportPadding(\n      globalMaxX - initialViewport,\n      globalMaxX\n    );\n\n    // set initial range\n    this.setViewportRange(\n      globalMaxX - initialViewport - viewportPadding,\n      globalMaxX + viewportPadding\n    );\n  }\n\n  /**\n   * @param {*} options\n   * @return {*}\n   */\n  extendSeriesOptions (options) {\n    return Object.assign({}, options, {\n      strokeWidth: 2\n    });\n  }\n\n  addCursorEvents () {\n    this.on(ChartEvents.REDRAW_CURSOR, _ => {\n      this.requestRedrawCursor();\n    });\n\n    this.on(ChartEvents.SHOW_CURSOR, _ => {\n      this.showCursor();\n    });\n\n    this.on(ChartEvents.HIDE_CURSOR, _ => {\n      this.hideCursor();\n    });\n\n    this.on(ChartEvents.TRANSLATE_MARKERS, ([ newX, oldX ]) => {\n      this.translateMarkers( newX, oldX );\n    });\n  }\n\n  showCursor () {\n    if (this.cursorOpacity >= 1\n      || this.cursorAnimationType === CursorAnimationType.showing) {\n      return;\n    }\n\n    this.cancelCursorOpacityAnimation();\n    this.createCursorOpacityAnimation( 1 );\n  }\n\n  hideCursor () {\n    if (this.cursorOpacity <= 0\n      || this.cursorAnimationType === CursorAnimationType.hiding) {\n      return;\n    }\n\n    this.cancelCursorOpacityAnimation();\n    this.createCursorOpacityAnimation( 0 );\n  }\n\n  translateMarkers (newX, oldX) {\n    oldX = this.cursorAnimation && this.cursorAnimation.currentPosition || oldX;\n\n    if (!this.cursorAnimation) {\n      const pointsNumber = this.viewportRangeIndexes[ 1 ] - this.viewportRangeIndexes[ 0 ];\n      if (pointsNumber > 60) {\n        // translate without animation\n        return ( this.axisCursorPositionX = newX );\n      }\n\n      const viewportRange = this.viewportRange;\n      const insideViewportRange = viewportRange[0] <= oldX && oldX <= viewportRange[1];\n      if (this._firstCursorAnimation || !insideViewportRange) {\n        oldX = newX;\n      }\n      this._firstCursorAnimation = false;\n      this.createCursorAnimation( newX, oldX );\n    } else {\n      this.patchCursorAnimation( newX, oldX );\n    }\n  }\n\n  createCursorOpacityAnimation (toOpacity = 0) {\n    const animation = new Tween(this, 'cursorOpacity', toOpacity, {\n      duration: toOpacity === 1 ? 150 : 300, // fast appear | slow disappear\n      timingFunction: 'easeInOutQuad'\n    });\n\n    const onFinished = _ => {\n      this.cursorOpacityAnimation = null;\n      this.cursorAnimationType = CursorAnimationType.inactive;\n    };\n\n    animation.on( TweenEvents.COMPLETE, onFinished );\n    animation.on( TweenEvents.CANCELLED, onFinished );\n\n    animation.start();\n\n    this.cursorOpacityAnimation = animation;\n  }\n\n  cancelCursorOpacityAnimation () {\n    if (this.hasCursorOpacityAnimation) {\n      this.cursorOpacityAnimation.cancel();\n      this.cursorOpacityAnimation = null;\n    }\n  }\n\n  createCursorAnimation (toX, fromX) {\n    const onFinished = _ => {\n      this.cursorAnimation = null;\n    };\n\n    const viewportDistance = this.viewportRange[ 1 ] - this.viewportRange[ 0 ];\n\n    const velocity = viewportDistance * 1e-6;\n    const acceleration = viewportDistance * 1e-7;\n    const maxVelocity = 1e9;\n\n    const animation = new TransitionPlayback(fromX, toX, {\n      velocity,\n      acceleration,\n      maxVelocity\n    });\n\n    animation.on( TransitionEvents.FINISHED, onFinished );\n    animation.start();\n\n    this.cursorAnimation = animation;\n  }\n\n  patchCursorAnimation (toX, fromX) {\n    if (!this.cursorAnimation) {\n      return;\n    }\n    this.cursorAnimation.setToPosition( toX );\n  }\n\n  emitEvent (eventName, event) {\n    switch (eventName) {\n      case 'mousemove':\n        this._onMouseMove( event );\n        break;\n      case 'mouseleave':\n        this._onMouseLeave( event );\n        break;\n\n      case 'touchstart':\n        this._onTouchStart( event );\n        break;\n      case 'touchmove':\n        this._onTouchMove( event );\n        break;\n      case 'touchend':\n        this._onTouchEnd( event );\n        break;\n    }\n  }\n\n  onResize () {\n    super.onResize();\n\n    this._setInsideChartState( false, true );\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return ChartVariables.mainChartHeight;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get hasCursorOpacityAnimation () {\n    return this.cursorOpacityAnimation && this.cursorOpacityAnimation.isRunning;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get hasCursorAnimation () {\n    return this.cursorAnimation && this.cursorAnimation.isRunning;\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @private\n   */\n  _resolveNavigationRange (min, max) {\n    const globalMinX = this.xAxis[ 0 ];\n    const globalMaxX = this.xAxis[ this.xAxis.length - 1 ];\n\n    const globalDistance = globalMaxX - globalMinX;\n\n    let minX = globalMinX + min * globalDistance;\n    let maxX = globalMinX + max * globalDistance;\n\n    const padding = this.computeViewportPadding( minX, maxX );\n\n    return [ minX - padding, maxX + padding ];\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onMouseMove (ev) {\n    this._onCursorMove( ev );\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onMouseLeave (ev) {\n    this._onCursorLeave();\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onTouchStart (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    this._onCursorMove( targetTouch );\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onTouchMove (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    this._onCursorMove( targetTouch );\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onTouchEnd (ev) {\n    this._onCursorLeave();\n  }\n\n  /**\n   * @param cursorPosition\n   * @private\n   */\n  _onCursorMove (cursorPosition) {\n    const insideChart = this._insideChart( cursorPosition );\n\n    this._setInsideChartState(\n      insideChart\n    );\n\n    if (!insideChart) {\n      return;\n    }\n\n    const oldIndex = this.axisCursorPointIndex;\n\n    const cursorX = this.projectCursorToX( cursorPosition );\n    this.axisCursorPointIndex = this._findPointIndexByCursor( cursorX );\n    this.axisCursorPositionX = this.xAxis[ this.axisCursorPointIndex ];\n\n    const indexChanged = this.axisCursorPointIndex !== oldIndex;\n\n    if (indexChanged) {\n      this.emit(ChartEvents.TRANSLATE_MARKERS, [\n        this.axisCursorPositionX,\n        this.xAxis[ oldIndex ]\n      ]);\n      this.emit( ChartEvents.REDRAW_CURSOR );\n    }\n\n    this._updateLabel( indexChanged );\n  }\n\n  _updateLabel (changed = true) {\n    const lines = this._prepareLabelData();\n    const viewportRange = this.viewportRange;\n\n    const data = {\n      changed, lines, viewportRange\n    };\n\n    if (this.telechart.isWorker) {\n      this.telechart.global.postMessage({\n        type: TelechartWorkerEvents.UPDATE_DATA_LABEL,\n        data\n      });\n    } else {\n      this.telechart.dedicatedApi.updateDataLabel( data );\n    }\n  }\n\n  /**\n   * @param {number} cursorX\n   * @return {number}\n   * @private\n   */\n  _findPointIndexByCursor (cursorX) {\n    const [ lowerIndex, upperIndex ] = binarySearchIndexes( this.xAxis, cursorX );\n\n    let index = null;\n    if (lowerIndex < 0 && upperIndex >= 0) {\n      index = upperIndex;\n    } else if (lowerIndex >= 0 && upperIndex >= this.xAxis.length) {\n      index = lowerIndex;\n    } else {\n      const lowerDistance = Math.abs( cursorX - this.xAxis[ lowerIndex ] );\n      const upperDistance = Math.abs( cursorX - this.xAxis[ upperIndex ] );\n      const isLowerCloser = lowerDistance <= upperDistance;\n\n      const isLowerVisible = this.xAxis[ lowerIndex ] >= this.viewportRange[ 0 ];\n      const isUpperVisible = this.xAxis[ upperIndex ] <= this.viewportRange[ 1 ];\n\n      index = isLowerCloser\n        ? ( isLowerVisible ? lowerIndex : upperIndex )\n        : ( isUpperVisible ? upperIndex : lowerIndex );\n    }\n\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  _onCursorLeave () {\n    this._setInsideChartState( false );\n  }\n\n  /**\n   * @param {boolean} isInside\n   * @param {boolean} immediate\n   * @private\n   */\n  _setInsideChartState (isInside, immediate = false) {\n    const changed = this.cursorInsideChart !== isInside;\n    if (!changed && !immediate) {\n      return;\n    }\n\n    this.cursorInsideChart = isInside;\n\n    if (this._markerHideTimeout) {\n      clearTimeout( this._markerHideTimeout );\n      this._markerHideTimeout = null;\n    }\n\n    const change = _ => {\n      this._onCursorInsideChartChanged( isInside );\n    };\n\n    if (!isInside && !immediate) {\n      // create short delay for cursor & markers hiding\n      this._markerHideTimeout = setTimeout( change, 2000 );\n    } else {\n      change();\n    }\n  }\n\n  /**\n   * @param {boolean} isInside\n   * @private\n   */\n  _onCursorInsideChartChanged (isInside) {\n    isInside\n      ? this._showCursor()\n      : this._hideCursor();\n\n    this._cursorShowing = isInside;\n    this._toggleDataLabelVisibility( isInside );\n  }\n\n  /**\n   * @param visibility\n   * @private\n   */\n  _toggleDataLabelVisibility (visibility) {\n    if (this.telechart.isWorker) {\n      this.telechart.global.postMessage({\n        type: TelechartWorkerEvents.SET_DATA_LABEL_VISIBILITY,\n        visibility\n      });\n    } else {\n      this.telechart.dedicatedApi.setDataLabelVisibility( visibility );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _showCursor () {\n    this.emit( ChartEvents.SHOW_CURSOR );\n  }\n\n  /**\n   * @private\n   */\n  _hideCursor () {\n    this.emit( ChartEvents.HIDE_CURSOR );\n  }\n\n  /**\n   * @param {number} pageX\n   * @param {number} pageY\n   * @return {boolean}\n   * @private\n   */\n  _insideChart ({ pageX, pageY }) {\n    const { top, left } = this.telechart.canvasOffset;\n    const chartTop = pageY - top - this.seriesOffsetTop;\n    const chartLeft = pageX - left;\n\n    return chartTop >= 0 && chartTop <= this.chartHeight\n      && chartLeft >= 0 && chartLeft <= this.chartWidth;\n  }\n\n  /**\n   * @return {Array}\n   * @private\n   */\n  _prepareLabelData () {\n    const data = [];\n\n    const index = this.axisCursorPointIndex;\n    const x = this.xAxis[ index ];\n    const isBarChart = this.isBarChart;\n    const isPercentage = this.isPercentage;\n    const addAll = isBarChart && this.series.length > 1;\n\n    const sumTreeOffset = this.computeSumTreeChunkOffset();\n\n    this.eachSeries(line => {\n      const y = line.yAxis[ index ];\n\n      const item = {\n        color: line.color,\n        label: line.label,\n        name: line.name,\n        visible: line.isVisible,\n        x,\n        y,\n        canvasY: this.projectYToCanvas( line.yAxis[ index ] ),\n        canvasX: this.projectXToCanvas( line.xAxis[ index ] ),\n      };\n\n      if (isPercentage) {\n        const sum = this.stackedSumTree[ sumTreeOffset + index ];\n        item.percentage = y / sum * 100;\n      }\n\n      data.push( item );\n    });\n\n    if (addAll) {\n      const cursorIndex = this.axisCursorPointIndex;\n      const y = this.stackedSumTree[ sumTreeOffset + cursorIndex ];\n\n      data.push({\n        color: this.telechart.themeColors.barAllColor,\n        label: 'all',\n        name: 'All',\n        visible: true,\n        x,\n        y,\n        canvasY: 0,\n        canvasX: 0\n      });\n    }\n\n    return data;\n  }\n}\n","export const NavigatorChartEvents = {\n  RANGE_CHANGED: 'rangeChanged',\n  ANIMATE_RANGE: 'animateRange',\n};\n","import { BaseChart } from './BaseChart';\nimport { ChartTypes } from './ChartTypes';\nimport { NavigatorChartEvents } from './events/NavigatorChartEvents';\nimport { Tween, TweenEvents } from '../animation/Tween';\nimport { TelechartWorkerEvents } from '../worker/worker-events';\n\nimport {\n  ChartVariables,\n  clampNumber, drawRoundedRect\n} from '../../utils';\n\nexport class NavigatorChart extends BaseChart {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _type = ChartTypes.navigatorChart;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _overlayPaddingTopBottom = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _paddingLeftRight = 12;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPadding = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderWidth = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderLeftRightBorderWidth = 9;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _overlayLeftWidth = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _overlayRightWidth = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  redrawSliderUINeeded = true;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _navigatorRange = [ .8 - ChartVariables.initialViewportScale, .8 ];\n  _navigatorRange = [ 1 - ChartVariables.initialViewportScale, 1 ];\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _navigatorRangeAnimation = null;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _navigationRangeAnimationObject = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _navigatorMinRangeDistance = .075;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _navigatorChangeDirection = 'right';\n\n  /**\n   * Initializes navigator chart\n   */\n  initialize () {\n    super.initialize();\n\n    this._updateNavigatorDimensions();\n\n    this.sendRangeToApi();\n  }\n\n  update (deltaTime) {\n    super.update( deltaTime );\n\n    /*if (this._navigatorRangeFromEventUpdated) {\n      this.setNavigationRange( ...this._navigatorRangeFromEvent );\n      this._navigatorRangeFromEventUpdated = false;\n    }*/\n\n    const hasRangeAnimation = this._navigatorRangeAnimation && this._navigatorRangeAnimation.isRunning;\n    if (hasRangeAnimation) {\n      this._navigatorRangeAnimation.update( deltaTime );\n\n      this.updateNavigationRange(\n        this._navigationRangeAnimationObject.from,\n        this._navigationRangeAnimationObject.to\n      );\n\n      this.redrawSliderUINeeded = true;\n\n      this.sendRangeToApi();\n    }\n  }\n\n  render () {\n    super.render();\n\n    if (this.redrawSliderUINeeded || this.telechart.forceRedraw) {\n      this.redrawSliderUI();\n\n      this.redrawSliderUINeeded = false;\n    }\n  }\n\n  redrawChart () {\n    const context = this.telechart.navigationSeriesContext;\n    context.clearRect( 0, 0, this.chartWidth, this.chartHeight );\n\n    let lastOutput = [];\n    for (let i = 0, len = this.series.length; i < len; ++i) {\n      lastOutput = this.series[ i ].render( context, lastOutput );\n    }\n  }\n\n  redrawSliderUI () {\n    const context = this.telechart.navigationUIContext;\n\n    context.clearRect( 0, 0, this.chartWidth, this.navigatorHeight );\n\n    this.redrawSliderOverlays( context );\n    this.redrawSlider( context );\n  }\n\n  redrawSliderOverlays (context) {\n    const overlayLeftWidth = this._overlayLeftWidth;\n    const overlayRightWidth = this._overlayRightWidth;\n\n    const colors = this.telechart.themeColors;\n\n    if (overlayLeftWidth) {\n      context.globalAlpha = colors.sliderOverlayAlpha;\n      context.fillStyle = colors.sliderOverlay;\n\n      drawRoundedRect(\n        context,\n        this._paddingLeftRight,\n        this._overlayPaddingTopBottom,\n        overlayLeftWidth + this._sliderLeftRightBorderWidth,\n        this.navigatorHeight - this._overlayPaddingTopBottom * 2, {\n          tl: 8,\n          bl: 8\n        }\n      );\n\n      context.fill();\n    }\n\n    context.globalAlpha = colors.sliderOverlayAlpha;\n    context.fillStyle = colors.sliderOverlay;\n\n    if (overlayRightWidth) {\n      drawRoundedRect(\n        context,\n        this._paddingLeftRight + this.navigatorWidth - overlayRightWidth - this._sliderLeftRightBorderWidth,\n        this._overlayPaddingTopBottom,\n        overlayRightWidth + this._sliderLeftRightBorderWidth,\n        this.navigatorHeight - this._overlayPaddingTopBottom * 2, {\n          tr: 8,\n          br: 8\n        }\n      );\n\n      context.fill();\n    }\n  }\n\n  redrawSlider (context) {\n    const overlayLeftWidth = this._overlayLeftWidth;\n    const overlayRightWidth = this._overlayRightWidth;\n\n    const colors = this.telechart.themeColors;\n\n    context.globalAlpha = 1;\n    context.fillStyle = colors.sliderBorder;\n    context.strokeStyle = colors.sliderBorder;\n\n    const topBottomPadding = 0;\n\n    // left border\n    drawRoundedRect(\n      context,\n      this._paddingLeftRight + overlayLeftWidth, topBottomPadding,\n      this._sliderLeftRightBorderWidth, this.navigatorHeight - 2 * topBottomPadding, {\n        tl: 6,\n        bl: 6\n      }\n    );\n    context.fill();\n\n    // right border\n    drawRoundedRect(\n      context,\n      this._paddingLeftRight + this.navigatorWidth - overlayRightWidth - this._sliderLeftRightBorderWidth, topBottomPadding,\n      this._sliderLeftRightBorderWidth, this.navigatorHeight - 2 * topBottomPadding, {\n        tr: 6,\n        br: 6\n      }\n    );\n    context.fill();\n\n    context.strokeStyle = colors.sliderBorder;\n    context.lineWidth = 1;\n\n    context.beginPath();\n    context.moveTo(\n      this._paddingLeftRight + overlayLeftWidth + this._sliderLeftRightBorderWidth,\n      topBottomPadding\n    );\n    context.lineTo(\n      this._paddingLeftRight + this.navigatorWidth - overlayRightWidth - this._sliderLeftRightBorderWidth,\n      topBottomPadding\n    );\n    context.stroke();\n\n    context.beginPath();\n    context.moveTo(\n      this._paddingLeftRight + overlayLeftWidth + this._sliderLeftRightBorderWidth,\n      this.navigatorHeight - topBottomPadding\n    );\n    context.lineTo(\n      this._paddingLeftRight + this.navigatorWidth - overlayRightWidth - this._sliderLeftRightBorderWidth,\n      this.navigatorHeight - topBottomPadding\n    );\n    context.stroke();\n\n    // borders pins\n    context.strokeStyle = 'white';\n    context.lineWidth = 2;\n    context.lineCap = 'round';\n    context.lineJoin = 'round';\n\n    const pinHeight = 0.2 * this.navigatorHeight;\n\n    const x1 = this._paddingLeftRight + overlayLeftWidth + this._sliderLeftRightBorderWidth / 2;\n    const y1 = this.navigatorHeight / 2 - pinHeight / 2;\n    const x2 = this._paddingLeftRight + this.navigatorWidth - overlayRightWidth - this._sliderLeftRightBorderWidth / 2;\n    const y2 = this.navigatorHeight / 2 + pinHeight / 2;\n\n    context.beginPath();\n    context.moveTo( x1, y1 );\n    context.lineTo( x1, y2 );\n    context.stroke();\n\n    context.beginPath();\n    context.moveTo( x2, y1 );\n    context.lineTo( x2, y2 );\n    context.stroke();\n  }\n\n  onResize () {\n    super.onResize();\n\n    this._updateNavigatorDimensions();\n\n    this.redrawSliderUI();\n  }\n\n  sendRangeToApi () {\n    const range = this._navigatorRange;\n    const [ f, s ] = this.telechart._chart._viewportPointsIndexes;\n    const rangeX = [ this.xAxis[ f ], this.xAxis[ s ] ];\n\n    if (this.telechart.isWorker) {\n      this.telechart.global.postMessage({\n        type: TelechartWorkerEvents.SET_NAVIGATION_RANGE,\n        range,\n        rangeX\n      });\n    } else {\n      this.telechart.dedicatedApi.setNavigationRange( range, rangeX );\n    }\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @param {*} options\n   */\n  animateNavigationRangeTo (min = 0, max = 1, options = {}) {\n    const {\n      duration = 300,\n      timingFunction = 'easeInOutQuad'\n    } = options;\n\n    const [ newMin, newMax ] = this._clampNavigationRange( min, max );\n\n    if (this._navigatorRangeAnimation) {\n      return this._navigatorRangeAnimation.patchAnimation( [ newMin, newMax ] );\n    }\n\n    this._navigationRangeAnimationObject = {\n      from: this._navigatorRange[ 0 ],\n      to: this._navigatorRange[ 1 ]\n    };\n\n    this._navigatorRangeAnimation = new Tween(this._navigationRangeAnimationObject, [ 'from', 'to' ], [\n      newMin, newMax\n    ], {\n      duration, timingFunction\n    });\n\n    const onFinished = _ => {\n      this._navigatorRangeAnimation = null;\n    };\n\n    this._navigatorRangeAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._navigatorRangeAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._navigatorRangeAnimation.start();\n\n    this.emit( NavigatorChartEvents.ANIMATE_RANGE, [ newMin, newMax ] );\n  }\n\n  setNavigationRangeFromEvent (min, max) {\n    /*this._navigatorRangeFromEvent = [ min, max ];\n    this._navigatorRangeFromEventUpdated = true;*/\n\n    this.setNavigationRange( min, max );\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @param {boolean} emitChange\n   */\n  setNavigationRange (min = 0, max = 1, { emitChange = true } = {}) {\n    [ min, max ] = this._clampNavigationRange( min, max );\n    this._navigatorRange = [ min, max ];\n\n    this._updateNavigatorDimensions();\n    this.redrawSliderUINeeded = true;\n\n    if (emitChange) {\n      this.emit( NavigatorChartEvents.RANGE_CHANGED, this._navigatorRange );\n    }\n\n    this.sendRangeToApi();\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   */\n  updateNavigationRange (min, max) {\n    this.setNavigationRange( min, max, { emitChange: false } );\n  }\n\n  emitEvent (eventName, event, ...args) {\n    switch (eventName) {\n      // overlays\n      case 'overlay.click':\n        this._onSliderOverlayClick( event, ...args );\n        break;\n\n      // slider\n      case 'slider.mousedown':\n        this._onSliderMouseDown( event, ...args );\n        break;\n      case 'slider.mousemove':\n        this._onSliderMouseMove( event, ...args );\n        break;\n      case 'slider.touchstart':\n        this._onSliderTouchStart( event, ...args );\n        break;\n      case 'slider.touchmove':\n        this._onSliderTouchMove( event, ...args );\n        break;\n\n      // slider controllers\n      case 'slider-controller.mousedown':\n        this._onSliderControllerMouseDown( event, ...args );\n        break;\n      case 'slider-controller.mousemove':\n        this._onSliderControllerMouseMove( event, ...args );\n        break;\n      case 'slider-controller.touchstart':\n        this._onSliderControllerTouchStart( event, ...args );\n        break;\n      case 'slider-controller.touchmove':\n        this._onSliderControllerTouchMove( event, ...args );\n        break;\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return ChartVariables.navigationChartHeight;\n  }\n\n  /**\n   * @return {number}\n   */\n  get navigatorWidth () {\n    return this.chartWidth - this._paddingLeftRight * 2;\n  }\n\n  /**\n   * @return {number}\n   */\n  get navigatorHeight () {\n    return ChartVariables.navigationChartUIHeight;\n  }\n\n  /**\n   * @return {number}\n   */\n  get seriesOffsetTop () {\n    return 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  get seriesOffsetBottom () {\n    return 0;\n  }\n\n  /**\n   * @return {CanvasRenderingContext2D}\n   */\n  get seriesContext () {\n    return this.telechart.navigationSeriesContext;\n  }\n\n  /**\n   * @return {CanvasRenderingContext2D}\n   */\n  get uiContext () {\n    return this.telechart.navigationUIContext;\n  }\n\n  /**\n   * @private\n   */\n  _updateNavigatorDimensions () {\n    const overlayLeftScale = this._navigatorRange[ 0 ];\n    const overlayRightScale = ( 1 - this._navigatorRange[ 1 ] );\n    const navigatorWidth = this.navigatorWidth;\n\n    this._overlayLeftWidth = navigatorWidth * overlayLeftScale;\n    this._overlayRightWidth = navigatorWidth * overlayRightScale;\n    this._sliderWidth = navigatorWidth - this._overlayLeftWidth - this._overlayRightWidth;\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @param {boolean} preserveDistance\n   * @return {Array<number>}\n   * @private\n   */\n  _clampNavigationRange (min = 0, max = 1, preserveDistance = false) {\n    const preservedDistance = clampNumber( max - min, this._navigatorMinRangeDistance, 1 );\n\n    min = clampNumber( min, 0, 1 );\n    max = clampNumber( max, 0, 1 );\n\n    const isRightController = this._navigatorChangeDirection === 'right';\n\n    const distance = max - min;\n    const minDistance = preserveDistance\n      ? preservedDistance\n      : this._navigatorMinRangeDistance;\n\n    if (distance < minDistance) {\n      if (isRightController) {\n        if (max - minDistance >= 0) {\n          min = max - minDistance;\n        } else {\n          min = 0;\n          max = minDistance;\n        }\n      } else {\n        if (min + minDistance <= 1) {\n          max = min + minDistance;\n        } else {\n          max = 1;\n          min = 1 - minDistance;\n        }\n      }\n    }\n\n    return [ min, max ];\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderMouseDown (ev) {\n    const {\n      pageX, pageY\n    } = ev;\n\n    this._sliderStartEvent = {\n      pageX, pageY\n    };\n    this._sliderStartPosition = this._navigatorRange.slice();\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderMouseMove (ev) {\n    const {\n      pageX: startPageX\n    } = this._sliderStartEvent;\n\n    const {\n      pageX = 0\n    } = ev;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n\n    const startPosition = this._sliderStartPosition;\n\n    let [ min, max ] = this._clampNavigationRange(\n      startPosition[ 0 ] - positionDelta,\n      startPosition[ 1 ] - positionDelta,\n      true\n    );\n\n    this.setNavigationRangeFromEvent( min, max );\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderTouchStart (ev) {\n    const {\n      pageX, pageY\n    } = ev.targetTouches[ 0 ];\n\n    this._sliderStartEvent = {\n      pageX, pageY\n    };\n    this._sliderStartPosition = this._navigatorRange.slice();\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderTouchMove (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    const {\n      pageX: startPageX\n    } = this._sliderStartEvent;\n\n    const {\n      pageX = 0\n    } = targetTouch;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n\n    const startPosition = this._sliderStartPosition;\n\n    let [ min, max ] = this._clampNavigationRange(\n      startPosition[ 0 ] - positionDelta,\n      startPosition[ 1 ] - positionDelta,\n      true\n    );\n\n    this.setNavigationRangeFromEvent( min, max );\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @param {string} direction\n   * @private\n   */\n  _onSliderControllerMouseDown (ev, direction) {\n    const {\n      pageX, pageY\n    } = ev;\n\n    this._sliderControllerStartPosition = this._navigatorRange.slice();\n    this._navigatorChangeDirection = direction;\n    this._sliderControllerStartEvent = {\n      pageX, pageY\n    };\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderControllerMouseMove (ev) {\n    const {\n      pageX: startPageX\n    } = this._sliderControllerStartEvent;\n\n    const {\n      pageX = 0\n    } = ev;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n    const startPosition = this._sliderControllerStartPosition;\n    const isLeft = this._navigatorChangeDirection === 'left';\n\n    let [ min, max ] = [\n      startPosition[ 0 ] - ( isLeft ? positionDelta : 0 ),\n      startPosition[ 1 ] - ( !isLeft ? positionDelta : 0 )\n    ];\n\n    [ min, max ] = this._clampNavigationRange( min, max );\n\n    if (isLeft) {\n      this._sliderControllerStartPosition[ 1 ] = max;\n    } else {\n      this._sliderControllerStartPosition[ 0 ] = min;\n    }\n\n    this.setNavigationRangeFromEvent( min, max );\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @param {string} direction\n   * @private\n   */\n  _onSliderControllerTouchStart (ev, direction) {\n    const {\n      pageX, pageY\n    } = ev.targetTouches[ 0 ];\n\n    this._sliderControllerStartPosition = this._navigatorRange.slice();\n    this._navigatorChangeDirection = direction;\n    this._sliderControllerStartEvent = {\n      pageX, pageY\n    };\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderControllerTouchMove (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    const {\n      pageX: startPageX\n    } = this._sliderControllerStartEvent;\n\n    const {\n      pageX = 0\n    } = targetTouch;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n    const startPosition = this._sliderControllerStartPosition;\n    const isLeft = this._navigatorChangeDirection === 'left';\n\n    let [ min, max ] = [\n      startPosition[ 0 ] - ( isLeft ? positionDelta : 0 ),\n      startPosition[ 1 ] - ( !isLeft ? positionDelta : 0 )\n    ];\n\n    [ min, max ] = this._clampNavigationRange( min, max );\n\n    if (isLeft) {\n      this._sliderControllerStartPosition[ 1 ] = max;\n    } else {\n      this._sliderControllerStartPosition[ 0 ] = min;\n    }\n\n    this.setNavigationRangeFromEvent( min, max );\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @param {number} position\n   * @private\n   */\n  _onSliderOverlayClick (ev, position = 0) {\n    const halfDistance = ( this._navigatorRange[ 1 ] - this._navigatorRange[ 0 ] ) * .5;\n\n    const [ min, max ] = this._clampNavigationRange(\n      position - halfDistance,\n      position + halfDistance,\n      true\n    );\n\n    this.animateNavigationRangeTo( min, max );\n  }\n}\n","import { EventEmitter } from './core/misc/EventEmitter';\nimport { Clock } from './core/misc/Clock';\nimport { Chart } from './core/chart2/Chart';\nimport { NavigatorChart } from './core/chart2/NavigatorChart';\nimport { ChartEvents } from './core/chart2/events/ChartEvents';\nimport { ChartThemes, Colors } from './utils/themes';\nimport { NavigatorChartEvents } from './core/chart2/events/NavigatorChartEvents';\nimport { TelechartWorkerEvents } from './core/worker/worker-events';\n\nlet TELECHART_ID = 1;\n\nexport let isWorker = false;\ntry {\n  isWorker = typeof window === 'undefined';\n} catch (e) {\n  isWorker = true;\n}\n\nexport class Telechart2 extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = TELECHART_ID++;\n\n  /**\n   * @type {Object}\n   */\n  options = null;\n\n  /**\n   * @type {Object}\n   */\n  environmentOptions = null;\n\n  /**\n   * @type {HTMLCanvasElement | OffscreenCanvas}\n   * @private\n   */\n  mainCanvas = null;\n\n  /**\n   * @type {HTMLCanvasElement | OffscreenCanvas}\n   * @private\n   */\n  axisCanvas = null;\n\n  /**\n   * @type {HTMLCanvasElement | OffscreenCanvas}\n   * @private\n   */\n  uiCanvas = null;\n\n  /**\n   * @type {HTMLCanvasElement | OffscreenCanvas}\n   * @private\n   */\n  navigationSeriesCanvas = null;\n\n  /**\n   * @type {HTMLCanvasElement | OffscreenCanvas}\n   * @private\n   */\n  navigationUICanvas = null;\n\n  /**\n   * @type {CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D}\n   */\n  context = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {NavigatorChart}\n   * @private\n   */\n  _navigatorChart = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _themeName = ChartThemes.default;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _title = '';\n\n  /**\n   * @type {Clock}\n   * @private\n   */\n  _clock = null;\n\n  /**\n   * @type {{top: number, left: number}}\n   */\n  canvasOffset = {\n    top: 0,\n    left: 0\n  };\n\n  /**\n   * @type {{top: number, left: number}}\n   */\n  axisCanvasOffset = {\n    top: 0,\n    left: 0\n  };\n\n  /**\n   * @type {{top: number, left: number}}\n   */\n  navigationSeriesCanvasOffset = {\n    top: 0,\n    left: 0\n  };\n\n  /**\n   * @type {{top: number, left: number}}\n   */\n  navigationUICanvasOffset = {\n    top: 0,\n    left: 0\n  };\n\n  /**\n   * @type {TelechartApi}\n   */\n  dedicatedApi = null;\n\n  /**\n   * @type {boolean}\n   */\n  forceRedraw = false;\n\n  /**\n   * @static\n   * @param {HTMLCanvasElement} mainCanvas\n   * @param {HTMLCanvasElement} axisCanvas\n   * @param {HTMLCanvasElement} uiCanvas\n   * @param {HTMLCanvasElement} navigationSeriesCanvas\n   * @param {HTMLCanvasElement} navigationUICanvas\n   * @param {TelechartApi} api\n   * @param {Object} options\n   * @param environmentOptions\n   */\n  static create ({ mainCanvas, axisCanvas, uiCanvas, navigationSeriesCanvas, navigationUICanvas, api }, options = {}, environmentOptions = {}) {\n    const chart = new Telechart2();\n\n    // only in windowed context\n    chart.dedicatedApi = api;\n\n    chart.setOptions( options );\n\n    chart.setMainCanvas( mainCanvas );\n    chart.setAxisCanvas( axisCanvas );\n    chart.setUICanvas( uiCanvas );\n    chart.setNavigationSeriesCanvas( navigationSeriesCanvas );\n    chart.setNavigationUICanvas( navigationUICanvas );\n\n    chart.setEnvironmentOptions( environmentOptions );\n    chart.initialize();\n\n    return chart;\n  }\n\n  /**\n   * @param {Object} options\n   */\n  setOptions (options = {}) {\n    this.options = options;\n  }\n\n  /**\n   * @param options\n   */\n  setEnvironmentOptions (options = {}) {\n    const {\n      // main canvas\n      canvasOffset,\n      canvasWidth,\n      canvasHeight,\n      canvasDpr,\n\n      // axis canvas\n      axisCanvasOffset,\n      axisCanvasWidth,\n      axisCanvasHeight,\n      axisCanvasDpr,\n\n      // ui canvas\n      uiCanvasOffset,\n      uiCanvasWidth,\n      uiCanvasHeight,\n      uiCanvasDpr,\n\n      // navigation canvas series\n      navigationSeriesCanvasOffset,\n      navigationSeriesCanvasWidth,\n      navigationSeriesCanvasHeight,\n      navigationSeriesCanvasDpr,\n\n      // navigation canvas UI\n      navigationUICanvasOffset,\n      navigationUICanvasWidth,\n      navigationUICanvasHeight,\n      navigationUICanvasDpr,\n    } = options;\n\n    this.environmentOptions = options;\n\n    this.canvasOffset = canvasOffset;\n    this.canvasWidth = canvasWidth;\n    this.canvasHeight = canvasHeight;\n    this.canvasDpr = canvasDpr;\n\n    this.axisCanvasOffset = axisCanvasOffset;\n    this.axisCanvasWidth = axisCanvasWidth;\n    this.axisCanvasHeight = axisCanvasHeight;\n    this.axisCanvasDpr = axisCanvasDpr;\n\n    this.uiCanvasOffset = uiCanvasOffset;\n    this.uiCanvasWidth = uiCanvasWidth;\n    this.uiCanvasHeight = uiCanvasHeight;\n    this.uiCanvasDpr = uiCanvasDpr;\n\n    this.navigationSeriesCanvasOffset = navigationSeriesCanvasOffset;\n    this.navigationSeriesCanvasWidth = navigationSeriesCanvasWidth;\n    this.navigationSeriesCanvasHeight = navigationSeriesCanvasHeight;\n    this.navigationSeriesCanvasDpr = navigationSeriesCanvasDpr;\n\n    this.navigationUICanvasOffset = navigationUICanvasOffset;\n    this.navigationUICanvasWidth = navigationUICanvasWidth;\n    this.navigationUICanvasHeight = navigationUICanvasHeight;\n    this.navigationUICanvasDpr = navigationUICanvasDpr;\n\n    if (this.mainContext) {\n      this.updateContexts();\n\n      // fire resize event if we have any context\n      this.onResize();\n    }\n  }\n\n  onResize () {\n    this.emit( 'resize' );\n  }\n\n  /**\n   * @param {HTMLCanvasElement} canvas\n   */\n  setMainCanvas (canvas) {\n    this.mainCanvas = canvas;\n  }\n\n  /**\n   * @param {HTMLCanvasElement} canvas\n   */\n  setAxisCanvas (canvas) {\n    this.axisCanvas = canvas;\n  }\n\n  /**\n   * @param {HTMLCanvasElement} canvas\n   */\n  setUICanvas (canvas) {\n    this.uiCanvas = canvas;\n  }\n\n  /**\n   * @param {HTMLCanvasElement} canvas\n   */\n  setNavigationSeriesCanvas (canvas) {\n    this.navigationSeriesCanvas = canvas;\n  }\n\n  /**\n   * @param {HTMLCanvasElement} canvas\n   */\n  setNavigationUICanvas (canvas) {\n    this.navigationUICanvas = canvas;\n  }\n\n  /**\n   * Initialize the chart\n   */\n  initialize () {\n    this.setTheme( this.options.theme || ChartThemes.default );\n    this.setTitle( this.options.title );\n\n    this.initializeContexts();\n\n    // create components\n    this._createChart();\n    this._createNavigatorChart();\n    this._addEventListeners();\n\n    this.initializeButtons();\n\n    // create animation loop\n    this._clock = new Clock();\n\n    if (isWorker) {\n      this.nextFrame();\n    }\n  }\n\n  /**\n   * Animation loop\n   */\n  nextFrame () {\n    const deltaTime = this._clock.getDelta();\n\n    // update context\n    this.update( deltaTime );\n\n    // render context\n    this.render();\n\n    this.global.requestAnimationFrame(_ => this.nextFrame());\n  }\n\n  /**\n   * Update loop\n   */\n  update (deltaTime) {\n    this._chart.update( deltaTime );\n    this._navigatorChart.update( deltaTime );\n  }\n\n  render () {\n    if (this._chart) {\n      this._chart.render();\n    }\n\n    if (this._navigatorChart) {\n      this._navigatorChart.render();\n    }\n\n    this.forceRedraw = false;\n  }\n\n  /**\n   * @param {string} themeName\n   */\n  setTheme (themeName) {\n    this._themeName = themeName;\n\n    this.forceRedraw = true;\n\n    this.render();\n\n    if (this._chart) {\n      this._chart._updateLabel();\n    }\n  }\n\n  /**\n   * @param {string} title\n   */\n  setTitle (title) {\n    this._title = title;\n  }\n\n  /**\n   * Destroys the chart instance\n   */\n  destroy () {\n  }\n\n  initializeContexts () {\n    this.mainContext = this.mainCanvas.getContext( '2d' );\n    this.axisContext = this.axisCanvas.getContext( '2d' );\n    this.uiContext = this.uiCanvas.getContext( '2d' );\n    this.navigationSeriesContext = this.navigationSeriesCanvas.getContext( '2d' );\n    this.navigationUIContext = this.navigationUICanvas.getContext( '2d' );\n\n    this.updateContextsScale();\n  }\n\n  updateContexts () {\n    if (isWorker) {\n      this.mainCanvas.width = this.canvasWidth * this.canvasDpr;\n      this.mainCanvas.height = this.canvasHeight * this.canvasDpr;\n\n      this.axisCanvas.width = this.axisCanvasWidth * this.axisCanvasDpr;\n      this.axisCanvas.height = this.axisCanvasHeight * this.axisCanvasDpr;\n\n      this.uiCanvas.width = this.uiCanvasWidth * this.uiCanvasDpr;\n      this.uiCanvas.height = this.uiCanvasHeight * this.uiCanvasDpr;\n\n      this.navigationSeriesCanvas.width = this.navigationSeriesCanvasWidth * this.navigationSeriesCanvasDpr;\n      this.navigationSeriesCanvas.height = this.navigationSeriesCanvasHeight * this.navigationSeriesCanvasDpr;\n\n      this.navigationUICanvas.width = this.navigationUICanvasWidth * this.navigationUICanvasDpr;\n      this.navigationUICanvas.height = this.navigationUICanvasHeight * this.navigationUICanvasDpr;\n    }\n\n    this.updateContextsScale();\n  }\n\n  updateContextsScale () {\n    // downscale to provide hidpi picture\n    this.mainContext.scale( this.canvasDpr, this.canvasDpr );\n    this.axisContext.scale( this.axisCanvasDpr, this.axisCanvasDpr );\n    this.uiContext.scale( this.uiCanvasDpr, this.uiCanvasDpr );\n    this.navigationSeriesContext.scale( this.navigationSeriesCanvasDpr, this.navigationSeriesCanvasDpr );\n    this.navigationUIContext.scale( this.navigationUICanvasDpr, this.navigationUICanvasDpr );\n  }\n\n  initializeButtons () {\n    const buttons = this._getLines();\n\n    if (isWorker) {\n      this.global.postMessage({\n        type: TelechartWorkerEvents.INITIALIZE_BUTTONS,\n        buttons\n      });\n    } else {\n      this.dedicatedApi.initializeButtons( buttons );\n    }\n  }\n\n  updateButtons () {\n    const buttons = this._getLines();\n\n    if (isWorker) {\n      this.global.postMessage({\n        type: TelechartWorkerEvents.UPDATE_BUTTONS,\n        buttons\n      });\n    } else {\n      this.dedicatedApi.updateButtons( buttons );\n    }\n  }\n\n  mainCanvasEvent (eventName, event) {\n    this._chart.emitEvent( eventName, event );\n  }\n\n  navUICanvasEvent (eventName, event, args = []) {\n    this._navigatorChart.emitEvent( eventName, event, ...args );\n  }\n\n  /**\n   * @return {string}\n   */\n  get themeName () {\n    return this._themeName;\n  }\n\n  /**\n   * @return {*}\n   */\n  get themeColors () {\n    return Colors[ this._themeName ] || Colors.default;\n  }\n\n  /**\n   * @return {DedicatedWorkerGlobalScope | Window}\n   */\n  get global () {\n    return isWorker\n      ? self : window;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isWorker () {\n    return isWorker;\n  }\n\n  /**\n   * @private\n   */\n  _createChart () {\n    this._chart = new Chart( this, this.options );\n    this._chart.initialize();\n\n    if (this._chart.isStacked) {\n      this._chartSumTree = this._chart.stackedSumTree;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _createNavigatorChart () {\n    this._navigatorChart = new NavigatorChart( this, this.options );\n\n    if (this._chart.isStacked) {\n      // reusing stacked sum tree for navigator\n      this._navigatorChart.stackedSumTree = this._chartSumTree;\n    }\n\n    this._navigatorChart.initialize();\n  }\n\n  /**\n   * @private\n   */\n  _addEventListeners () {\n    this._chart.on(ChartEvents.SERIES_VISIBLE_CHANGE, line => {\n      line.isVisible\n        ? this._navigatorChart.setSeriesVisible( line.label )\n        : this._navigatorChart.setSeriesInvisible( line.label );\n    });\n\n    this._chart.on(ChartEvents.FORCE_BUTTONS_UPDATE, _ => {\n      this.updateButtons();\n    });\n\n    this._navigatorChart.on(NavigatorChartEvents.RANGE_CHANGED, range => {\n      this._chart.setNavigationRange( ...range );\n    });\n\n    this._navigatorChart.on(NavigatorChartEvents.ANIMATE_RANGE, range => {\n      this._chart.animateNavigationRangeTo( ...range );\n    });\n  }\n\n  /**\n   * @return {{visible: boolean, color: string, name: string, label: string}[]}\n   * @private\n   */\n  _getLines () {\n    return this._chart.series.map(line => {\n      return {\n        color: line.color,\n        name: line.name,\n        label: line.label,\n        visible: line.isVisible\n      };\n    });\n  }\n}\n","export * from './Telechart2';\n"],"sourceRoot":""}